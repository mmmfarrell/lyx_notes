#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Goal-Based Visual Relative Estimation
\end_layout

\begin_layout Part
Lie Algebra Assuming Static Target
\end_layout

\begin_layout Standard
Most of the math is borrowed from 
\begin_inset CommandInset href
LatexCommand href
name "VI_EKF_Paper"
target "https://magiccvs.byu.edu/gitlab/superjax/vi_ekf_paper"
literal "false"

\end_inset

.
\end_layout

\begin_layout Section
Landmark Propagation
\end_layout

\begin_layout Standard
From the paper, we note that we propagate the Kalman filter with the boxplus
 operator
\begin_inset Formula 
\begin{equation}
\hat{\boldsymbol{x}}\left(t+dt\right)=\hat{\boldsymbol{x}}\left(t\right)\boxplus f\left(\hat{\boldsymbol{x}}\left(t\right),\boldsymbol{u}\left(t\right)\right)dt.
\end{equation}

\end_inset

Our estimated state will be given by 
\begin_inset Formula 
\begin{equation}
\boldsymbol{x}=\begin{bmatrix}\boldsymbol{q}_{c}^{\zeta_{1}}\rho_{1}\dots\boldsymbol{q}_{c}^{\zeta_{n}}\rho_{n}\end{bmatrix}^{T}.
\end{equation}

\end_inset

First, let us just worry about propagating the landmark states, assuming
 that the UAV motion is known.
 For the landmarks, the only elements of 
\begin_inset Formula $f$
\end_inset

 that we care about are
\begin_inset Formula 
\begin{equation}
\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}=-T_{\zeta_{i}}^{T}\left(\boldsymbol{\omega}_{c/I}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/I}^{c}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\rho_{i}}=\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/I}^{c}.
\end{equation}

\end_inset

Our inputs are denoted by 
\begin_inset Formula $\boldsymbol{u}=\left[\boldsymbol{v}_{c/I}^{c},\boldsymbol{\omega}_{c/I}^{c}\right]$
\end_inset

, and the input noise is 
\begin_inset Formula $\boldsymbol{\eta}=\begin{bmatrix}\boldsymbol{\eta}_{v}\boldsymbol{\eta}_{\omega}\end{bmatrix}$
\end_inset

 such that 
\begin_inset Formula 
\begin{equation}
\boldsymbol{v}_{c/I}^{c}=\bar{\boldsymbol{v}}_{c/I}^{c}-\boldsymbol{\eta}_{v}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\omega}_{c/I}^{c}=\bar{\boldsymbol{\omega}}_{c/I}^{c}-\boldsymbol{\eta}_{\omega}.
\end{equation}

\end_inset

To propagate the quaternion, we must define the 
\begin_inset Formula $\boxplus$
\end_inset

 operator for the quaternion unit vector.
 
\begin_inset Formula 
\begin{equation}
\boldsymbol{q}_{c}^{\zeta}\boxplus\boldsymbol{\delta}\triangleq\exp\left(T_{\zeta}\boldsymbol{\delta}\right)\otimes\boldsymbol{q}_{c}^{\zeta}
\end{equation}

\end_inset

I think this means that 
\begin_inset Formula 
\begin{equation}
\boldsymbol{\delta=\dot{\boldsymbol{q}}}_{c}^{\zeta}dt.
\end{equation}

\end_inset

Now we need to define a few things
\begin_inset Formula 
\begin{equation}
R\left(\boldsymbol{q}\right)=\left(2q_{0}^{2}-1\right)I-2q_{0}\bar{\boldsymbol{q}}^{\mathcircumflex}+2\bar{\boldsymbol{q}}\bar{\boldsymbol{q}}^{T}\in SO\left(3\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\zeta}_{i/c}^{c}=\left(R_{c}^{\zeta_{i}}\right)^{T}e_{3}\in S^{2}\subset\mathbb{R}^{3}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
T_{\zeta_{i}}=\left(R_{c}^{\zeta_{i}}\right)^{T}\left[e_{1}e_{2}\right]\in\mathbb{R}^{3\times2}
\end{equation}

\end_inset

and finally
\begin_inset Formula 
\begin{equation}
\exp\left(\boldsymbol{\delta}\right)\triangleq\begin{bmatrix}\cos\left(\frac{\parallel\boldsymbol{\delta}\parallel}{2}\right)\\
\sin\left(\frac{\parallel\boldsymbol{\delta}\parallel}{2}\right)\frac{\boldsymbol{\delta}}{\parallel\boldsymbol{\delta}\parallel}
\end{bmatrix}
\end{equation}

\end_inset

or the small angle approximation
\begin_inset Formula 
\begin{equation}
\exp\left(\boldsymbol{\delta}\right)\approx\begin{bmatrix}1\\
\frac{\boldsymbol{\delta}}{2}
\end{bmatrix}.
\end{equation}

\end_inset

For inverse depth it is pretty simple since 
\begin_inset Formula $\boxplus$
\end_inset

 is the same as 
\begin_inset Formula $+$
\end_inset

.
 We have
\begin_inset Formula 
\begin{equation}
\dot{\rho_{i}}=\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/I}^{c}
\end{equation}

\end_inset

so that
\begin_inset Formula 
\begin{equation}
\rho_{i}\left(t+dt\right)=\rho_{i}+\dot{\rho}_{i}dt
\end{equation}

\end_inset


\end_layout

\begin_layout Section
EKF State Jacobians 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
F=\frac{\partial\dot{\boldsymbol{x}}}{\partial\boldsymbol{x}}=\begin{bmatrix}F_{11} & F_{12} & \dots & 0\\
F_{21} & F_{22} & \dots & 0\\
0 & \dots & \ddots & \vdots\\
0 & 0 & \dots & 0
\end{bmatrix}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
F_{11}=\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial\boldsymbol{q}_{c}^{\zeta}}=-T_{\zeta_{i}}^{T}\left[\left(\boldsymbol{\omega}_{c/I}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/I}^{c}\right)^{\mathcircumflex}+\rho_{i}\left(\boldsymbol{v}_{c/I}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\right]T_{\zeta_{i}}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
F_{12}=\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial\rho_{i}}=-T_{\zeta_{i}}^{T}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/I}^{c}
\end{equation}

\end_inset

 
\begin_inset Formula 
\begin{equation}
F_{21}=\frac{\partial\dot{\rho_{i}}}{\partial\boldsymbol{q}_{c}^{\zeta}}=-\rho_{i}^{2}\left(\boldsymbol{v}_{c/I}^{c}\right)^{T}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}T_{\zeta_{i}}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
F_{22}=\frac{\partial\dot{\rho_{i}}}{\partial\rho_{i}}=2\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/I}^{c}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
EKF Input Jacobians
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
G=\frac{\partial\dot{\boldsymbol{x}}}{\partial\boldsymbol{u}}=\begin{bmatrix}G_{11} & G_{12}\\
G_{21} & G_{22}\\
\vdots & \vdots
\end{bmatrix}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{align}
G_{11} & =\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial\boldsymbol{\eta}_{v}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{T}\left(\left(\bar{\boldsymbol{\omega}}_{c/I}^{c}-\boldsymbol{\eta}_{\omega}\right)+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(\bar{\boldsymbol{v}}_{c/I}^{c}-\boldsymbol{\eta}_{v}\right)\right)\right)}{\partial\boldsymbol{\eta}_{v}}\\
 & =T_{\zeta_{i}}^{T}\left(\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\right)
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
G_{12} & =\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial\boldsymbol{\eta}_{\omega}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{T}\left(\left(\bar{\boldsymbol{\omega}}_{c/I}^{c}-\boldsymbol{\eta}_{\omega}\right)+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(\bar{\boldsymbol{v}}_{c/I}^{c}-\boldsymbol{\eta}_{v}\right)\right)\right)}{\partial\boldsymbol{\eta}_{\omega}}\\
 & =T_{\zeta_{i}}^{T}
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
G_{21} & =\frac{\partial\dot{\rho_{i}}}{\partial\boldsymbol{\eta}_{v}}\\
 & =\frac{\partial\left(\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(\bar{\boldsymbol{v}}_{c/I}^{c}-\boldsymbol{\eta}_{v}\right)\right)}{\partial\boldsymbol{\eta}_{v}}\\
 & =-\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
G_{22} & =\frac{\partial\dot{\rho}_{i}}{\partial\boldsymbol{\eta}_{\omega}}\\
 & =\frac{\partial\left(\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(\bar{\boldsymbol{v}}_{c/I}^{c}-\boldsymbol{\eta}_{v}\right)\right)}{\partial\boldsymbol{\eta}_{v}}\\
 & =0
\end{align}

\end_inset

 
\end_layout

\begin_layout Section
Pixel Measurement Update
\end_layout

\begin_layout Standard
We assume that we know the camera intrinsic values, namely the pixel location
 of the camera's optical axis 
\begin_inset Formula $\left(u_{0},v_{0}\right)$
\end_inset

 and the camera focal lengths 
\begin_inset Formula $\left(f_{x},f_{y}\right)$
\end_inset

.
 Now we assume that we can measure the landmark location in the camera frame.
 The pinhole camera model can be written as
\begin_inset Formula 
\begin{equation}
h_{\text{cam}}\left(\boldsymbol{x}\right)=\frac{1}{e_{3}^{T}\zeta^{c}}\begin{bmatrix}f_{x} & 0 & 0\\
0 & f_{y} & 0
\end{bmatrix}\boldsymbol{\zeta}^{c}+\begin{bmatrix}u_{0}\\
v_{0}
\end{bmatrix}.
\end{equation}

\end_inset

 The jacobian 
\begin_inset Formula $\partial h_{\text{cam}}\slash\partial\boldsymbol{x}$
\end_inset

 of the camera measurement model is given by
\begin_inset Formula 
\begin{equation}
H_{\text{cam}}=\begin{bmatrix}H_{1} & 0 & \dots & H_{n} & 0\end{bmatrix}
\end{equation}

\end_inset

where
\begin_inset Formula 
\begin{equation}
H_{i}=\frac{1}{e_{3}^{T}\boldsymbol{\zeta}_{i/c}^{c}}\begin{bmatrix}f_{x} & 0 & 0\\
0 & f_{y} & 0
\end{bmatrix}\left(\frac{\boldsymbol{\zeta}_{i/c}^{c}e_{3}^{T}}{e_{3}^{T}\boldsymbol{\zeta}_{i/c}^{c}}-I_{3\times3}\right)\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}T_{\zeta_{i}}.
\end{equation}

\end_inset

We use these equations to update our state
\begin_inset Formula 
\begin{equation}
\hat{\boldsymbol{x}}^{+}=\hat{\boldsymbol{x}}\boxplus K\left(\boldsymbol{z}\boxminus h\left(\hat{\boldsymbol{x}}\right)\right)
\end{equation}

\end_inset

which I think is just
\begin_inset Formula 
\begin{equation}
\hat{\boldsymbol{x}}^{+}=\hat{\boldsymbol{x}}\boxplus K\left(\boldsymbol{z}-h\left(\hat{\boldsymbol{x}}\right)\right)
\end{equation}

\end_inset

because the pixel measurements are 
\begin_inset Formula $\in\mathbb{R}^{2}.$
\end_inset


\end_layout

\begin_layout Part
Lie Algebra Estimating Constant Inertial Velocity of Target
\end_layout

\begin_layout Section
State Vector
\end_layout

\begin_layout Standard
We wish to estimate the inertial velocity of a moving target (moving at
 approximately constant velocity).
 We also wish to estimate our position relative to a point on the moving
 target (referred to as the goal).
 To improve these estimates, we will also estimate the locations of many
 other visible features on the moving target.
 Our estimated state vector will be given by:
\begin_inset Formula 
\begin{equation}
\boldsymbol{x}=\begin{bmatrix}\boldsymbol{v}_{g/I}^{I}\boldsymbol{q}_{c}^{\zeta_{0}}\rho_{0}\dots\boldsymbol{q}_{c}^{\zeta_{n}}\rho_{n}\end{bmatrix}^{T}.
\end{equation}

\end_inset

We assume that the goal frame is moving at near constant velocity.
 Our inputs are denoted by 
\begin_inset Formula $\boldsymbol{u}=\left[\boldsymbol{v}_{c/I}^{c},\boldsymbol{\omega}_{c/I}^{c}\right]$
\end_inset

, and the input noise is 
\begin_inset Formula $\boldsymbol{\eta}=\begin{bmatrix}\boldsymbol{\eta}_{v}\boldsymbol{\eta}_{\omega}\end{bmatrix}$
\end_inset

 such that 
\begin_inset Formula 
\begin{equation}
\boldsymbol{v}_{c/I}^{c}=\bar{\boldsymbol{v}}_{c/I}^{c}-\boldsymbol{\eta}_{v}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\omega}_{c/I}^{c}=\bar{\boldsymbol{\omega}}_{c/I}^{c}-\boldsymbol{\eta}_{\omega}.
\end{equation}

\end_inset

We observe that the velocity of the camera with respect to the goal frame,
 expressed in the camera frame is given by
\begin_inset Formula 
\begin{equation}
\boldsymbol{v}_{c/g}^{c}=\boldsymbol{v}_{c/I}^{c}-\boldsymbol{R}_{I}^{c}\boldsymbol{v}_{g/I}^{I}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{align}
\boldsymbol{v}_{c/I}^{c} & =R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{b/c}^{b}\right)\\
\boldsymbol{v}_{c/g}^{c} & =\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}
\end{align}

\end_inset

where 
\begin_inset Formula $\boldsymbol{R}_{I}^{c}$
\end_inset

 denotes the rotation from the inertial frame into the camera frame.
 For the mean time we assume that the goal frame is not rotation with respect
 to the inertial frame at all.
 This also allows us to conclude that
\begin_inset Formula 
\begin{equation}
\boldsymbol{\omega}_{c/g}^{c}=\boldsymbol{\omega}_{c/I}^{c}.
\end{equation}

\end_inset


\end_layout

\begin_layout Section
State Propagation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{x}}=\begin{bmatrix}\boldsymbol{\dot{v}}_{g/I}^{I}\boldsymbol{\dot{q}}_{c}^{\zeta_{0}}\dot{\rho}_{0}\dots\boldsymbol{\dot{q}}_{c}^{\zeta_{n}}\dot{\rho}_{n}\end{bmatrix}^{T}.
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Velocity Propagation
\end_layout

\begin_layout Standard
Since we assume constant velocity of the goal frame with respect to the
 inertial frame (expressed in the inertial frame), the velocity states need
 no propagation.
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{v}}_{g/I}^{I}=\bar{0}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Landmark Propagation
\end_layout

\begin_layout Standard
When the landmarks are static in the inertial frame, the landmark propagation
 is defined by
\begin_inset Formula 
\begin{equation}
\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}=-T_{\zeta_{i}}^{T}\left(\boldsymbol{\omega}_{c/I}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/I}^{c}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\rho_{i}}=\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/I}^{c}.
\end{equation}

\end_inset

However, since we assume that the landmarks are only static in the goal
 frame, we instead write the landmark propagation as
\begin_inset Formula 
\begin{equation}
\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}=-T_{\zeta_{i}}^{T}\left(\boldsymbol{\omega}_{c/g}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/g}^{c}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\rho_{i}}=\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/g}^{c}.
\end{equation}

\end_inset

To propagate these, we must define the 
\begin_inset Formula $\boxplus$
\end_inset

 operator for the quaternion unit vector
\begin_inset Formula 
\begin{equation}
\boldsymbol{q}_{c}^{\zeta}\boxplus\boldsymbol{\delta}\triangleq\exp\left(T_{\zeta}\boldsymbol{\delta}\right)\otimes\boldsymbol{q}_{c}^{\zeta}
\end{equation}

\end_inset

where
\begin_inset Formula 
\begin{equation}
\boldsymbol{\delta=\dot{\boldsymbol{q}}}_{c}^{\zeta}dt.
\end{equation}

\end_inset

 Now we need to define a few things
\begin_inset Formula 
\begin{equation}
R\left(\boldsymbol{q}\right)=\left(2q_{0}^{2}-1\right)I-2q_{0}\bar{\boldsymbol{q}}^{\mathcircumflex}+2\bar{\boldsymbol{q}}\bar{\boldsymbol{q}}^{T}\in SO\left(3\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\zeta}_{i/c}^{c}=\left(R_{c}^{\zeta_{i}}\right)^{T}e_{3}\in S^{2}\subset\mathbb{R}^{3}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
T_{\zeta_{i}}=\left(R_{c}^{\zeta_{i}}\right)^{T}\left[e_{1}e_{2}\right]\in\mathbb{R}^{3\times2}
\end{equation}

\end_inset

and finally
\begin_inset Formula 
\begin{equation}
\exp\left(\boldsymbol{\delta}\right)\triangleq\begin{bmatrix}\cos\left(\frac{\parallel\boldsymbol{\delta}\parallel}{2}\right)\\
\sin\left(\frac{\parallel\boldsymbol{\delta}\parallel}{2}\right)\frac{\boldsymbol{\delta}}{\parallel\boldsymbol{\delta}\parallel}
\end{bmatrix}
\end{equation}

\end_inset

or the small angle approximation
\begin_inset Formula 
\begin{equation}
\exp\left(\boldsymbol{\delta}\right)\approx\begin{bmatrix}1\\
\frac{\boldsymbol{\delta}}{2}
\end{bmatrix}.
\end{equation}

\end_inset

 For inverse depth it is pretty simple since 
\begin_inset Formula $\boxplus$
\end_inset

 is the same as 
\begin_inset Formula $+$
\end_inset


\begin_inset Formula 
\begin{equation}
\rho_{i}\left(t+dt\right)=\rho_{i}+\dot{\rho}_{i}dt.
\end{equation}

\end_inset


\end_layout

\begin_layout Section
State Jacobians
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
F=\frac{\partial\dot{\boldsymbol{x}}}{\partial\boldsymbol{x}}=\begin{bmatrix}0 & 0 & 0 & 0 & \dots & 0\\
F_{21} & F_{22} & F_{23} & 0 & \dots & 0\\
F_{31} & F_{32} & F_{33} & \vdots & \ddots & \vdots\\
0 & 0 & 0 & 0 & \dots & F_{NN}
\end{bmatrix}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
F_{11}=\frac{\delta\boldsymbol{\dot{v}}_{g/I}^{I}}{d\boldsymbol{x}}=\begin{bmatrix}0 & 0 & \dots & 0\end{bmatrix}(3xN)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
F_{21} & =\frac{\delta\boldsymbol{\dot{q}}_{c}^{\zeta_{0}}}{\delta\boldsymbol{v}_{g/I}^{I}}=\frac{\delta}{\delta\boldsymbol{v}_{g/I}^{I}}\left(-T_{\zeta_{i}}^{T}\left(\boldsymbol{\omega}_{c/g}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/g}^{c}\right)\right)\\
 & =\frac{\delta\boldsymbol{\dot{q}}_{c}^{\zeta_{0}}}{\delta\boldsymbol{v}_{g/I}^{I}}=\frac{\delta}{\delta\boldsymbol{v}_{g/I}^{I}}\left(-T_{\zeta_{i}}^{T}\left(\boldsymbol{\omega}_{c/g}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{v}_{c/I}^{c}-\boldsymbol{R}_{I}^{c}\boldsymbol{v}_{g/I}^{I}\right)\right)\right)\\
 & =\frac{\delta\boldsymbol{\dot{q}}_{c}^{\zeta_{0}}}{\delta\boldsymbol{v}_{g/I}^{I}}=\frac{\delta}{\delta\boldsymbol{v}_{g/I}^{I}}\left(-T_{\zeta_{i}}^{T}\left(\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(-\boldsymbol{R}_{I}^{c}\boldsymbol{v}_{g/I}^{I}\right)\right)\right)\\
 & =\frac{\delta\boldsymbol{\dot{q}}_{c}^{\zeta_{0}}}{\delta\boldsymbol{v}_{g/I}^{I}}=\rho_{i}T_{\zeta_{i}}^{T}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{R}_{I}^{c}(2x3)
\end{align}

\end_inset


\begin_inset Formula 
\begin{equation}
F_{22}=\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial\boldsymbol{q}_{c}^{\zeta}}=-T_{\zeta_{i}}^{T}\left[\left(\boldsymbol{\omega}_{c/g}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/g}^{c}\right)^{\mathcircumflex}+\rho_{i}\left(\boldsymbol{v}_{c/g}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\right]T_{\zeta_{i}}(2x2)?
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
F_{23}=\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial\rho_{i}}=-T_{\zeta_{i}}^{T}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/g}^{c}(2x1)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{align}
F_{31} & =\frac{\delta\dot{\rho}_{i}}{\delta\boldsymbol{v}_{g/I}^{I}}=\frac{\delta}{\delta\boldsymbol{v}_{g/I}^{I}}\left(\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/g}^{c}\right)\\
 & =\frac{\delta\dot{\rho}_{i}}{\delta\boldsymbol{v}_{g/I}^{I}}=\frac{\delta}{\delta\boldsymbol{v}_{g/I}^{I}}\left(\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(\boldsymbol{v}_{c/I}^{c}-\boldsymbol{R}_{I}^{c}\boldsymbol{v}_{g/I}^{I}\right)\right)\\
 & =\frac{\delta\dot{\rho}_{i}}{\delta\boldsymbol{v}_{g/I}^{I}}=-\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{R}_{I}^{c}(1x3)
\end{align}

\end_inset


\begin_inset Formula 
\begin{equation}
F_{32}=\frac{\partial\dot{\rho_{i}}}{\partial\boldsymbol{q}_{c}^{\zeta}}=-\rho_{i}^{2}\left(\boldsymbol{v}_{c/g}^{c}\right)^{T}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}T_{\zeta_{i}}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
F_{33}=\frac{\partial\dot{\rho_{i}}}{\partial\rho_{i}}=2\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/g}^{c}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Input Jacobians
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
G=\frac{\partial\dot{\boldsymbol{x}}}{\partial\boldsymbol{u}}=\begin{bmatrix}G_{11} & G_{12}\\
G_{21} & G_{22}\\
\vdots & \vdots
\end{bmatrix}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{align}
G_{11} & =\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial\boldsymbol{\eta}_{v}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{T}\left(\left(\bar{\boldsymbol{\omega}}_{c/I}^{c}-\boldsymbol{\eta}_{\omega}\right)+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(\bar{\boldsymbol{v}}_{c/I}^{c}-\boldsymbol{\eta}_{v}-\boldsymbol{R}_{I}^{c}\boldsymbol{v}_{g/I}^{I}\right)\right)\right)}{\partial\boldsymbol{\eta}_{v}}\\
 & =T_{\zeta_{i}}^{T}\left(\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\right)
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
G_{12} & =\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial\boldsymbol{\eta}_{\omega}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{T}\left(\left(\bar{\boldsymbol{\omega}}_{c/I}^{c}-\boldsymbol{\eta}_{\omega}\right)+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(\bar{\boldsymbol{v}}_{c/I}^{c}-\boldsymbol{\eta}_{v}-\boldsymbol{R}_{I}^{c}\boldsymbol{v}_{g/I}^{I}\right)\right)\right)}{\partial\boldsymbol{\eta}_{\omega}}\\
 & =T_{\zeta_{i}}^{T}
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
G_{21} & =\frac{\partial\dot{\rho_{i}}}{\partial\boldsymbol{\eta}_{v}}\\
 & =\frac{\partial\left(\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(\bar{\boldsymbol{v}}_{c/I}^{c}-\boldsymbol{\eta}_{v}-\boldsymbol{R}_{I}^{c}\boldsymbol{v}_{g/I}^{I}\right)\right)}{\partial\boldsymbol{\eta}_{v}}\\
 & =-\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
G_{22} & =\frac{\partial\dot{\rho}_{i}}{\partial\boldsymbol{\eta}_{\omega}}\\
 & =\frac{\partial\left(\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(\bar{\boldsymbol{v}}_{c/I}^{c}-\boldsymbol{\eta}_{v}-\boldsymbol{R}_{I}^{c}\boldsymbol{v}_{g/I}^{I}\right)\right)}{\partial\boldsymbol{\eta}_{\omega}}\\
 & =0
\end{align}

\end_inset


\end_layout

\begin_layout Section
Measurement Updates
\end_layout

\begin_layout Subsection
Pixel Measurements
\end_layout

\begin_layout Standard
We assume that we know the camera intrinsic values, namely the pixel location
 of the camera's optical axis 
\begin_inset Formula $\left(u_{0},v_{0}\right)$
\end_inset

 and the camera focal lengths 
\begin_inset Formula $\left(f_{x},f_{y}\right)$
\end_inset

.
 Now we assume that we can measure the landmark location in the camera frame.
 The pinhole camera model can be written as
\begin_inset Formula 
\begin{equation}
h_{\text{cam}}\left(\boldsymbol{x}\right)=\frac{1}{e_{3}^{T}\zeta^{c}}\begin{bmatrix}f_{x} & 0 & 0\\
0 & f_{y} & 0
\end{bmatrix}\boldsymbol{\zeta}^{c}+\begin{bmatrix}u_{0}\\
v_{0}
\end{bmatrix}.(2x1)
\end{equation}

\end_inset

 The jacobian 
\begin_inset Formula $\partial h_{\text{cam}}\slash\partial\boldsymbol{x}$
\end_inset

 of the camera measurement model is given by
\begin_inset Formula 
\begin{equation}
H_{\text{cam}}=\begin{bmatrix}0 & 0 & 0 & H_{0} & 0 & \dots & H_{n} & 0\end{bmatrix}(2xN)
\end{equation}

\end_inset

where the first three zeros are for the velocity states and the other zeros
 are for the inverse depth to the landmark (since the pixel is just a measuremen
t of the angle from the camera frame to the landmark).
\begin_inset Formula 
\begin{equation}
H_{i}=\frac{1}{e_{3}^{T}\boldsymbol{\zeta}_{i/c}^{c}}\begin{bmatrix}f_{x} & 0 & 0\\
0 & f_{y} & 0
\end{bmatrix}\left(\frac{\boldsymbol{\zeta}_{i/c}^{c}e_{3}^{T}}{e_{3}^{T}\boldsymbol{\zeta}_{i/c}^{c}}-I_{3\times3}\right)\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}T_{\zeta_{i}}.(2x2)
\end{equation}

\end_inset

We use these equations to update our state
\begin_inset Formula 
\begin{equation}
\hat{\boldsymbol{x}}^{+}=\hat{\boldsymbol{x}}\boxplus K\left(\boldsymbol{z}\boxminus h\left(\hat{\boldsymbol{x}}\right)\right)
\end{equation}

\end_inset

which for the pixel measurement is just
\begin_inset Formula 
\begin{equation}
\hat{\boldsymbol{x}}^{+}=\hat{\boldsymbol{x}}\boxplus K\left(\boldsymbol{z}-h\left(\hat{\boldsymbol{x}}\right)\right)
\end{equation}

\end_inset

because the pixel measurements are 
\begin_inset Formula $\in\mathbb{R}^{2}.$
\end_inset


\end_layout

\begin_layout Subsection
Depth Measurement
\end_layout

\begin_layout Standard
If the goal frame is based on an ArUco tag, we can use the depth measurement
 as a measurement of the distance between the camera frame and the goal
 frame.
 In this case, the measurement model is given by 
\begin_inset Formula 
\begin{equation}
h_{\text{depth}}(\boldsymbol{x})=\frac{1}{\rho_{0}}.
\end{equation}

\end_inset

The jacobian 
\begin_inset Formula $\delta h_{\text{depth}}/\delta\boldsymbol{x}$
\end_inset

 of the goal depth measurement is given by
\begin_inset Formula 
\begin{equation}
H_{\text{depth}}=\begin{bmatrix}0 & 0 & 0 & 0 & H_{0} & \dots & 0 & 0\end{bmatrix}(1xN)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
H_{0}=-\frac{1}{\rho_{0}^{2}}.
\end{equation}

\end_inset

We update our state with
\begin_inset Formula 
\begin{equation}
\hat{\boldsymbol{x}}^{+}=\hat{\boldsymbol{x}}\boxplus K\left(\boldsymbol{z}-h\left(\hat{\boldsymbol{x}}\right)\right)
\end{equation}

\end_inset

because the depth measurement is 
\begin_inset Formula $\in\mathbb{R}.$
\end_inset


\end_layout

\begin_layout Subsection
Velocity Measurement
\end_layout

\begin_layout Standard
We can get measurements of the inertial velocity of the goal frame either
 from GPS or from optical flow.
 If these measurements originate from optical flow, the measurements are
 inheritly in the camera frame, but if we know the orientation of the camera
 frame w.r.t.
 the inertial frame (i.e.
 
\begin_inset Formula $\boldsymbol{R}_{c}^{I}$
\end_inset

) then we can rotate the measurements into the inertial frame.
 In this case, the measurement model is given by
\begin_inset Formula 
\begin{equation}
h_{\text{velocity}}=\begin{bmatrix}\boldsymbol{v}_{g/I}^{I}\end{bmatrix}(3x1)
\end{equation}

\end_inset

The jacobian 
\begin_inset Formula $\delta h_{\text{depth}}/\delta\boldsymbol{x}$
\end_inset

 of the goal velocity measurement is given by
\begin_inset Formula 
\begin{equation}
H_{\text{depth}}=\begin{bmatrix}I_{3x3} & 0 & \dots & 0\end{bmatrix}(3xN)
\end{equation}

\end_inset

We update our state with
\begin_inset Formula 
\begin{equation}
\hat{\boldsymbol{x}}^{+}=\hat{\boldsymbol{x}}\boxplus K\left(\boldsymbol{z}-h\left(\hat{\boldsymbol{x}}\right)\right)
\end{equation}

\end_inset

because the velocity measurements are 
\begin_inset Formula $\in\mathbb{R}^{3}.$
\end_inset


\end_layout

\begin_layout Part
Now Using Only IMU And Mono Camera
\end_layout

\begin_layout Section
State Vector
\end_layout

\begin_layout Standard
We wish to estimate the position, velocity and orientation of a UAV as well
 as the inertial velocity of a moving target (moving at approximately constant
 velocity?).
 We also wish to estiamte the UAV position relative to a point on the moving
 target.
 To improve these estimates, we also estimate the locations of many other
 visible features on the moving target.
 The estimated state vector is therefore given by:
\begin_inset Formula 
\begin{equation}
\boldsymbol{x}=\begin{bmatrix}\boldsymbol{p}_{b/I}^{I} & \boldsymbol{v}_{b/I}^{b} & \boldsymbol{q}_{I}^{b} & \boldsymbol{\beta}_{a} & \boldsymbol{\beta}_{\omega} & b & \boldsymbol{v}_{g/I}^{I} & \boldsymbol{q}_{c}^{\zeta_{0}} & \rho_{0} & \dots & \boldsymbol{q}_{c}^{\zeta_{n}} & \rho_{n}\end{bmatrix}^{T}.
\end{equation}

\end_inset

Where 
\begin_inset Formula $b$
\end_inset

 is the linear drag term.
 This means that the state vector 
\begin_inset Formula $\boldsymbol{x}$
\end_inset

 will be of size 
\begin_inset Formula $3+3+4+3+3+1+3+5+5n=20+5+5n.$
\end_inset

 However, since each unit quaternion only has two degrees of freedom, the
 covariance matrix, 
\begin_inset Formula $P$
\end_inset

, is defined as 
\begin_inset Formula 
\begin{equation}
P=E\begin{bmatrix}\left(\boldsymbol{x}\boxminus\hat{\boldsymbol{x}}\right)\left(\boldsymbol{x}\boxminus\hat{\boldsymbol{x}}\right)^{T}\end{bmatrix}\in\mathbb{R}^{\left(19+3+3n\right)x\left(19+3+3n\right)}
\end{equation}

\end_inset

The inputs to the system are denoted by 
\begin_inset Formula $\boldsymbol{u}=\begin{bmatrix}\boldsymbol{a}_{b/I}^{I} & \boldsymbol{\omega}_{b/I}^{I}\end{bmatrix}$
\end_inset

 and the input noise, 
\begin_inset Formula $\boldsymbol{\eta}=\begin{bmatrix}\boldsymbol{\eta}_{a} & \boldsymbol{\eta}_{\omega}\end{bmatrix}$
\end_inset

.
 The measured acceleration, 
\begin_inset Formula $\bar{\boldsymbol{a}}_{b/I}^{b}$
\end_inset

, and angular rates, 
\begin_inset Formula $\bar{\boldsymbol{\omega}}_{b/I}^{b}$
\end_inset

 are shown to correspond by
\begin_inset Formula 
\begin{align*}
\boldsymbol{a}_{b/I}^{b} & =\bar{\boldsymbol{a}}_{b/I}^{b}-\beta_{a}-\eta_{a}\\
\boldsymbol{\omega}_{b/I}^{b} & =\bar{\boldsymbol{\omega}}_{b/I}^{I}-\beta_{\omega}-\eta_{\omega}.
\end{align*}

\end_inset

 It should be noted that we assume to know the camera position and angular
 offsets from the body frame, 
\begin_inset Formula $R_{b}^{c}$
\end_inset

 and 
\begin_inset Formula $p_{c/b}^{b}$
\end_inset

.
 With these we can show that the camera linear and angular velocities are
 given by
\begin_inset Formula 
\begin{align*}
\boldsymbol{v}_{c/I}^{c} & =R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)\\
\boldsymbol{\omega}_{c/I}^{c} & =R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}.
\end{align*}

\end_inset

We also note that the velocity of the camera with repect to the goal frame,
 expressed by the camera frame is given by:
\begin_inset Formula 
\begin{equation}
\boldsymbol{v}_{c/g}^{c}=\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}.
\end{equation}

\end_inset

Right now we also have to make this awful assumption that the goal frame
 is not rotating with respect to the inertial frame such that (TODO)
\begin_inset Formula 
\begin{equation}
\boldsymbol{\omega}_{c/g}^{c}=\boldsymbol{\omega}_{c/I}^{c}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
State Propagation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{x}}=\begin{bmatrix}\boldsymbol{\dot{p}}_{b/I}^{I} & \boldsymbol{\dot{v}}_{b/I}^{b} & \boldsymbol{\dot{q}}_{I}^{b} & \dot{\beta}_{a} & \dot{\beta}_{\omega} & \dot{b} & \boldsymbol{\dot{v}}_{g/I}^{I} & \boldsymbol{\dot{q}}_{c}^{\zeta_{0}} & \dot{\rho}_{0} & \dots & \boldsymbol{\dot{q}}_{c}^{\zeta_{n}} & \dot{\rho}_{n}\end{bmatrix}^{T}.
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
UAV State Propagation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{p}}_{b/I}^{I}=\left(R_{I}^{b}\right)^{T}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{v}}_{b/I}^{b}=\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\boldsymbol{a}_{b/I}^{b}+R_{I}^{b}\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\boldsymbol{v}_{b/I}^{b}-\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{q}}_{I}^{b}=\boldsymbol{\omega}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{a}=\boldsymbol{0}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{\omega}=\boldsymbol{0}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{b}=\boldsymbol{0}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Goal Velocity Propagation
\end_layout

\begin_layout Standard
Since we assume constant velocity of the goal frame with respect to the
 inertial frame (expressed in the inertial frame), the velocity states need
 no propagation.
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{v}}_{g/I}^{I}=\boldsymbol{0}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Landmark Propagation
\end_layout

\begin_layout Standard
When the landmarks are static in the inertial frame, the landmark propagation
 is defined by
\begin_inset Formula 
\begin{equation}
\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}=-T_{\zeta_{i}}^{T}\left(\boldsymbol{\omega}_{c/I}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/I}^{c}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\rho_{i}}=\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/I}^{c}.
\end{equation}

\end_inset

However, since we assume that the landmarks are only static in the goal
 frame, we instead write the landmark propagation as
\begin_inset Formula 
\begin{equation}
\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}=-T_{\zeta_{i}}^{T}\left(\boldsymbol{\omega}_{c/g}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/g}^{c}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\rho_{i}}=\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/g}^{c}.
\end{equation}

\end_inset

Where we define the velocities as
\begin_inset Formula 
\begin{align*}
\boldsymbol{v}_{c/I}^{c} & =R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)\\
\boldsymbol{\omega}_{c/I}^{c} & =R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{v}_{c/g}^{c}=\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}.
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\omega}_{c/g}^{c}=\boldsymbol{\omega}_{c/I}^{c}
\end{equation}

\end_inset

To propagate these, we must define the 
\begin_inset Formula $\boxplus$
\end_inset

 operator for the quaternion unit vector
\begin_inset Formula 
\begin{equation}
\boldsymbol{q}_{c}^{\zeta}\boxplus\boldsymbol{\delta}\triangleq\exp\left(T_{\zeta}\boldsymbol{\delta}\right)\otimes\boldsymbol{q}_{c}^{\zeta}
\end{equation}

\end_inset

where
\begin_inset Formula 
\begin{equation}
\boldsymbol{\delta=\dot{\boldsymbol{q}}}_{c}^{\zeta}dt.
\end{equation}

\end_inset

 Now we need to define a few things
\begin_inset Formula 
\begin{equation}
R\left(\boldsymbol{q}\right)=\left(2q_{0}^{2}-1\right)I-2q_{0}\bar{\boldsymbol{q}}^{\mathcircumflex}+2\bar{\boldsymbol{q}}\bar{\boldsymbol{q}}^{T}\in SO\left(3\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\zeta}_{i/c}^{c}=\left(R_{c}^{\zeta_{i}}\right)^{T}e_{3}\in S^{2}\subset\mathbb{R}^{3}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
T_{\zeta_{i}}=\left(R_{c}^{\zeta_{i}}\right)^{T}\left[e_{1}e_{2}\right]\in\mathbb{R}^{3\times2}
\end{equation}

\end_inset

and finally
\begin_inset Formula 
\begin{equation}
\exp\left(\boldsymbol{\delta}\right)\triangleq\begin{bmatrix}\cos\left(\frac{\parallel\boldsymbol{\delta}\parallel}{2}\right)\\
\sin\left(\frac{\parallel\boldsymbol{\delta}\parallel}{2}\right)\frac{\boldsymbol{\delta}}{\parallel\boldsymbol{\delta}\parallel}
\end{bmatrix}
\end{equation}

\end_inset

or the small angle approximation
\begin_inset Formula 
\begin{equation}
\exp\left(\boldsymbol{\delta}\right)\approx\begin{bmatrix}1\\
\frac{\boldsymbol{\delta}}{2}
\end{bmatrix}.
\end{equation}

\end_inset

 For inverse depth it is pretty simple since 
\begin_inset Formula $\boxplus$
\end_inset

 is the same as 
\begin_inset Formula $+$
\end_inset


\begin_inset Formula 
\begin{equation}
\rho_{i}\left(t+dt\right)=\rho_{i}+\dot{\rho}_{i}dt.
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Measurement Models
\end_layout

\begin_layout Subsection
Camera Measurement Model
\end_layout

\begin_layout Standard
We assume that we know the camera intrinsic values, namely the pixel location
 of the camera's optical axis 
\begin_inset Formula $\left(u_{0},v_{0}\right)$
\end_inset

 and the camera focal lengths 
\begin_inset Formula $\left(f_{x},f_{y}\right)$
\end_inset

.
 Now we assume that we can measure the landmark location in the camera frame.
 The pinhole camera model can be written as
\begin_inset Formula 
\begin{equation}
h_{\text{cam}}\left(\boldsymbol{x}\right)=\frac{1}{e_{3}^{T}\zeta^{c}}\begin{bmatrix}f_{x} & 0 & 0\\
0 & f_{y} & 0
\end{bmatrix}\boldsymbol{\zeta}^{c}+\begin{bmatrix}u_{0}\\
v_{0}
\end{bmatrix}.
\end{equation}

\end_inset

 The jacobian 
\begin_inset Formula $\partial h_{\text{cam}}\slash\partial\boldsymbol{x}$
\end_inset

 of the camera measurement model is given by
\begin_inset Formula 
\begin{equation}
H_{\text{cam}}=\begin{bmatrix}\boldsymbol{0} & \boldsymbol{0} & \boldsymbol{0} & \boldsymbol{0} & \boldsymbol{0} & \boldsymbol{0} & \boldsymbol{0} & H_{0} & 0 & \dots & H_{n} & 0\end{bmatrix}
\end{equation}

\end_inset

where
\begin_inset Formula 
\begin{equation}
H_{i}=\frac{1}{e_{3}^{T}\boldsymbol{\zeta}_{i/c}^{c}}\begin{bmatrix}f_{x} & 0 & 0\\
0 & f_{y} & 0
\end{bmatrix}\left(\frac{\boldsymbol{\zeta}_{i/c}^{c}e_{3}^{T}}{e_{3}^{T}\boldsymbol{\zeta}_{i/c}^{c}}-I_{3\times3}\right)\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}T_{\zeta_{i}}.
\end{equation}

\end_inset

We use these equations to update our state
\begin_inset Formula 
\begin{equation}
\hat{\boldsymbol{x}}^{+}=\hat{\boldsymbol{x}}\boxplus K\left(\boldsymbol{z}\boxminus h\left(\hat{\boldsymbol{x}}\right)\right)
\end{equation}

\end_inset

where
\begin_inset Formula 
\begin{equation}
\boldsymbol{z}=\begin{bmatrix}u\\
v
\end{bmatrix}
\end{equation}

\end_inset

which is just
\begin_inset Formula 
\begin{equation}
\hat{\boldsymbol{x}}^{+}=\hat{\boldsymbol{x}}\boxplus K\left(\boldsymbol{z}-h\left(\hat{\boldsymbol{x}}\right)\right)
\end{equation}

\end_inset

because the pixel measurements are 
\begin_inset Formula $\in\mathbb{R}^{2}.$
\end_inset


\end_layout

\begin_layout Subsection
Accelerometer Meas Model
\end_layout

\begin_layout Standard
Using the multirotor drag model from [13] in (15) pro- vides the benefit
 that velocity becomes directly observed by the accelerometer (assuming
 a linear drag constant).
 It is assumed that the accelerometer measures total acceleration of the
 body, neglecting gravity, in addition to a constant bias 
\begin_inset Formula $\beta_{a}$
\end_inset

 and zero-mean white noise 
\begin_inset Formula $\eta_{a}$
\end_inset

.
 If we also assume that thrust T acts only along the body 
\begin_inset Formula $e_{3}$
\end_inset

 axis, we can consider just the body 
\begin_inset Formula $e_{1}$
\end_inset

 and 
\begin_inset Formula $e_{2}$
\end_inset

 axes, removing any dependence of the measurement on T .
 The measurement model is then given by
\begin_inset Formula 
\begin{equation}
h_{acc}\left(\boldsymbol{x}\right)=I_{2x2}\left(-b\boldsymbol{v}_{b/I}^{b}+\beta_{a}+\eta_{a}\right).
\end{equation}

\end_inset

The Jacobian 
\begin_inset Formula $\delta h_{acc}/\delta\boldsymbol{x}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
H_{acc}=\begin{bmatrix}\boldsymbol{0} & -bI_{2x3} & \boldsymbol{0} & I_{2x3} & \boldsymbol{0} & -I_{2x3}\boldsymbol{v}_{b/I}^{b} & \boldsymbol{0} & \dots\end{bmatrix}.
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Keyframe Reset
\end_layout

\begin_layout Standard
Due to global position and heading being unobservable, perfoming a keyframe
 reset of these states may improve filter consistency and accuracy.
 A keyframe reset is performed by restting the global position and heading
 states to zero and updating the covariance matrix appropriately.
 With an altimeter (measurements from the ArUco tag), global altitude is
 observable and will not need to be reset.
\end_layout

\begin_layout Section
Some Jacobians
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\dot{{\bf q}}_{c}^{\zeta_{i}}=-T_{\zeta_{i}}^{\top}\left({\bf \omega}_{c/g}^{c}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}{\bf v}_{c/g}^{c}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{align*}
\boldsymbol{v}_{c/I}^{c} & =R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)\\
\boldsymbol{\omega}_{c/I}^{c} & =R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{v}_{c/g}^{c}=\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}.
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\omega}_{c/g}^{c}=\boldsymbol{\omega}_{c/I}^{c}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial{\bf v}_{b/I}^{b}} & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left({\bf \omega}_{c/g}^{c}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}{\bf v}_{c/g}^{c}\right)\right)}{\partial{\bf v}_{b/I}^{b}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left(\boldsymbol{\omega}_{c/I}^{c}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)\right)\right)}{\partial{\bf v}_{b/I}^{b}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left(R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)\right)\right)}{\partial{\bf v}_{b/I}^{b}}\\
 & =-T_{\zeta_{i}}^{\top}\left(\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}\right)\right)
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial{\bf q}_{I}^{b}} & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left({\bf \omega}_{c/g}^{c}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}{\bf v}_{c/g}^{c}\right)\right)}{\partial{\bf q}_{I}^{b}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left(\boldsymbol{\omega}_{c/I}^{c}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)\right)\right)}{\partial{\bf q}_{I}^{b}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left(R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)\right)\right)}{\partial{\bf q}_{I}^{b}}\\
 & =\frac{\partial\left(T_{\zeta_{i}}^{\top}\left(\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)\right)\right)}{\partial{\bf q}_{I}^{b}}\\
 & =\rho_{i}T_{\zeta_{i}}^{\top}\left(\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}\left(R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)^{\mathcircumflex}\right)\right)?????
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial{\bf v}_{g/I}^{I}} & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left({\bf \omega}_{c/g}^{c}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}{\bf v}_{c/g}^{c}\right)\right)}{\partial{\bf v}_{g/I}^{I}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left(\boldsymbol{\omega}_{c/I}^{c}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)\right)\right)}{\partial{\bf v}_{g/I}^{I}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left(R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)\right)\right)}{\partial{\bf v}_{g/I}^{I}}\\
 & =T_{\zeta_{i}}^{\top}\left(\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}R_{I}^{b}\right)\right)
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
\frac{\partial\dot{\rho_{i}}}{\partial{\bf q}_{I}^{b}} & =\frac{\partial\left(\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/g}^{c}\right)}{\partial{\bf q}_{I}^{b}}\\
 & =\frac{\partial\left(\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)\right)}{\partial\boldsymbol{q}_{I}^{b}}\\
 & =\frac{\partial\left(-\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)\right)}{\partial\boldsymbol{q}_{I}^{b}}\\
 & =-\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(R_{b}^{c}\left(R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)^{\mathcircumflex}\right)????
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
\frac{\partial\dot{\rho_{i}}}{\partial{\bf v}_{g/I}^{I}} & =\frac{\partial\left(\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/g}^{c}\right)}{\partial{\bf v}_{g/I}^{I}}\\
 & =\frac{\partial\left(\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}\right)\right)}{\partial{\bf v}_{g/I}^{I}}\\
 & =-\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(R_{b}^{c}R_{I}^{b}\right)
\end{align}

\end_inset


\end_layout

\begin_layout Section
Rotating goal frame
\end_layout

\begin_layout Standard
We can get measurements of the yaw of the vehicle w.r.t.
 inertial frame from the ArUco tag.
 (If we assume to know the mounting direction of the tag w.r.t.
 the vehicle this would simplify things).
 We can then use a motion model such as
\begin_inset Formula 
\begin{align}
\dot{p_{n}} & =v\sin\left(\theta\right)\\
\dot{p_{e}} & =v\cos\left(\theta\right)\\
\dot{v} & =0\\
\dot{\theta} & =\omega\\
\dot{\omega} & =0
\end{align}

\end_inset


\end_layout

\begin_layout Subsection
Option 1 - New motion model that takes into account the angular velocity
 of the vehicle
\end_layout

\begin_layout Standard
Earlier we assumed that the goal frame was not rotating with respect to
 the inertial frame.
 However, we want to account for the rotating of a vehicle.
 Here's and example
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\boldsymbol{v}_{c/I}^{c} & =R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)\\
\boldsymbol{\omega}_{c/I}^{c} & =R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}.
\end{align*}

\end_inset

We assume that the vehicle is rotating about the goal point and that the
 goal frame is aligned (in roll and pitch) with the inertial.
 The general example is given by
\begin_inset Formula 
\begin{equation}
\boldsymbol{v}_{c/I}^{b}=\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}
\end{equation}

\end_inset

Similarly we can say that
\begin_inset Formula 
\begin{equation}
\boldsymbol{v}_{i/I}^{g}=\boldsymbol{v}_{g/I}^{g}+\left(\boldsymbol{\omega}_{g/I}^{g}\right)^{\mathcircumflex}\boldsymbol{p}_{i/g}^{g}
\end{equation}

\end_inset

If we assume that the target only yaws then
\begin_inset Formula 
\begin{equation}
\boldsymbol{\omega}_{g/I}^{g}=\begin{bmatrix}0\\
0\\
\omega
\end{bmatrix}
\end{equation}

\end_inset

I just dont know how I would express 
\begin_inset Formula $\boldsymbol{p}_{i/g}^{g}$
\end_inset

 in terms of the states we have.
 I guess it wouldn't be too hard to figure out, just kind of nasty.
 Here's a shot at it.
\begin_inset Formula 
\begin{equation}
\boldsymbol{p}_{i/c}^{c}=\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{p}_{g/c}^{c}=\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{p}_{i/g}^{c}=\boldsymbol{p}_{i/c}^{c}-\boldsymbol{p}_{g/c}^{c}
\end{equation}

\end_inset


\series bold

\begin_inset Formula 
\begin{equation}
\boldsymbol{p}_{i/g}^{g}=R_{I}^{g}R_{b}^{I}R_{c}^{b}\boldsymbol{p}_{i/g}^{c}
\end{equation}

\end_inset


\series default
where 
\begin_inset Formula $R_{I}^{g}$
\end_inset

 is the rotation matrix defined by the yaw angle of the vehicle 
\begin_inset Formula $\theta$
\end_inset

.
 We can therefore define
\begin_inset Formula 
\begin{equation}
\boldsymbol{v}_{g/I}^{g}=\begin{bmatrix}v\\
0\\
0
\end{bmatrix}
\end{equation}

\end_inset

This gives us that
\begin_inset Formula 
\begin{align}
\boldsymbol{v}_{i/I}^{g} & =\boldsymbol{v}_{g/I}^{g}+\left(\boldsymbol{\omega}_{g/I}^{g}\right)^{\mathcircumflex}R_{I}^{g}R_{b}^{I}R_{c}^{b}\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)\\
\boldsymbol{v}_{i/I}^{I} & =R_{g}^{I}\left(\boldsymbol{v}_{g/I}^{g}+\left(\boldsymbol{\omega}_{g/I}^{g}\right)^{\mathcircumflex}R_{I}^{g}R_{b}^{I}R_{c}^{b}\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)\right)
\end{align}

\end_inset

Which would make some really nasty jacobians....
\begin_inset Formula 
\begin{align}
\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial{\bf v}_{g/I}^{g}} & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left({\bf \omega}_{c/g}^{c}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}{\bf v}_{c/i}^{c}\right)\right)}{\partial{\bf v}_{g/I}^{g}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left(\boldsymbol{\omega}_{c/I}^{c}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{i/I}^{I}\right)\right)\right)}{\partial{\bf v}_{g/I}^{g}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left(R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-R_{b}^{c}R_{I}^{b}R_{g}^{I}\left(\boldsymbol{v}_{g/I}^{g}+\left(\boldsymbol{\omega}_{g/I}^{g}\right)^{\mathcircumflex}R_{I}^{g}R_{b}^{I}R_{c}^{b}\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)\right)\right)\right)\right)}{\partial{\bf v}_{g/I}^{g}}\\
 & =T_{\zeta_{i}}^{\top}\left(\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}R_{I}^{b}R_{g}^{I}\right)\right)?????
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial{\bf \omega}_{g/I}^{g}} & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left({\bf \omega}_{c/g}^{c}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}{\bf v}_{c/i}^{c}\right)\right)}{\partial{\bf \boldsymbol{\omega}}_{g/I}^{g}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left(R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-R_{b}^{c}R_{I}^{b}R_{g}^{I}\left(\boldsymbol{v}_{g/I}^{g}+\left(\boldsymbol{\omega}_{g/I}^{g}\right)^{\mathcircumflex}R_{I}^{g}R_{b}^{I}R_{c}^{b}\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)\right)\right)\right)\right)}{\partial{\bf \boldsymbol{\omega}}_{g/I}^{g}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left(\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(-R_{b}^{c}R_{I}^{b}R_{g}^{I}\left(\left(\boldsymbol{\omega}_{g/I}^{g}\right)^{\mathcircumflex}R_{I}^{g}R_{b}^{I}R_{c}^{b}\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)\right)\right)\right)\right)}{\partial{\bf \boldsymbol{\omega}}_{g/I}^{g}}\\
 & =?????
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
\frac{\partial\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}}{\partial\boldsymbol{q}_{c}^{\zeta_{i}}} & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left({\bf \omega}_{c/g}^{c}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}{\bf v}_{c/i}^{c}\right)\right)}{\partial\boldsymbol{q}_{c}^{\zeta_{i}}}\\
 & =\frac{\partial\left(-T_{\zeta_{i}}^{\top}\left(R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}+\rho_{i}\left({\bf \zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-R_{b}^{c}R_{I}^{b}R_{g}^{I}\left(\boldsymbol{v}_{g/I}^{g}+\left(\boldsymbol{\omega}_{g/I}^{g}\right)^{\mathcircumflex}R_{I}^{g}R_{b}^{I}R_{c}^{b}\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)\right)\right)\right)\right)}{\partial\boldsymbol{q}_{c}^{\zeta_{i}}}\\
 & =????
\end{align}

\end_inset


\end_layout

\begin_layout Subsection
Option 2 - Match the yaw of the vehicle (to minimize relative yaw motion
 between the two)
\end_layout

\begin_layout Standard
We can try to pick out the yaw motion using optical flow.
 Theres a useful paper on optical flow 
\begin_inset CommandInset href
LatexCommand href
name "here"
target "http://www.aerospacelab-journal.org/sites/www.aerospacelab-journal.org/files/AL08-03_0.pdf"
literal "false"

\end_inset

.
 It has some optical flow formulas including these:
\begin_inset Formula 
\begin{equation}
\begin{bmatrix}OF_{x}\\
OF_{y}
\end{bmatrix}=T_{OF}+R_{OF}
\end{equation}

\end_inset

where 
\begin_inset Formula $T_{OF}$
\end_inset

 is the optical flow due to translation and 
\begin_inset Formula $R_{OF}$
\end_inset

 is the optical flow due to rotation.
\begin_inset Formula 
\begin{equation}
T_{OF}=\frac{1}{Z}\begin{bmatrix}-f & 0 & x\\
0 & -f & y
\end{bmatrix}\begin{bmatrix}V_{x}\\
V_{y}\\
V_{z}
\end{bmatrix}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
R_{OF}=\begin{bmatrix}\frac{xy}{f} & -\left(f+\frac{x^{2}}{f}\right) & y\\
\left(f+\frac{y^{2}}{f}\right) & -\frac{xy}{f} & -x
\end{bmatrix}\begin{bmatrix}\omega_{x}\\
\omega_{y}\\
\omega_{z}
\end{bmatrix}.
\end{equation}

\end_inset

Extracting only the rotating part shouldnt be too hard since
\begin_inset Formula 
\begin{equation}
\begin{bmatrix}OF_{x}\\
OF_{y}
\end{bmatrix}=\begin{bmatrix}\frac{-f}{Z} & 0 & \frac{x}{Z} & \frac{xy}{f} & -\left(f+\frac{x^{2}}{f}\right) & y\\
0 & -\frac{f}{Z} & \frac{y}{z} & \left(f+\frac{y^{2}}{f}\right) & -\frac{xy}{f} & -x
\end{bmatrix}\begin{bmatrix}V_{x}\\
V_{y}\\
V_{z}\\
\omega_{x}\\
\omega_{y}\\
\omega_{z}
\end{bmatrix}
\end{equation}

\end_inset

We would just need to assume to know the depth to each pixel.
 Then we could take the psuedo inverse and solve for the velocities vector.
\end_layout

\begin_layout Subsection
Option 3 - Look into Essential Matrix
\end_layout

\begin_layout Standard
If we can solve for the essential matrix between frames, then we can determine
 
\begin_inset Formula $R$
\end_inset

 and 
\begin_inset Formula $t$
\end_inset

 from frame to frame.
 This would be using the goal frame as our frame of reference, need to see
 if this breaks any assumptions or anything.
\end_layout

\begin_layout Part
Error State VIO with moving vehicle
\end_layout

\begin_layout Section
State Vector
\end_layout

\begin_layout Standard
We wish to estimate the position, velocity and orientation of a UAV as well
 as the inertial velocity of a moving target (moving at approximately constant
 velocity?).
 We also wish to estiamte the UAV position relative to a point on the moving
 target.
 To improve these estimates, we also estimate the locations of many other
 visible features on the moving target.
 The estimated state vector is therefore given by:
\begin_inset Formula 
\begin{equation}
\boldsymbol{x}=\begin{bmatrix}\boldsymbol{p}_{b/I}^{I} & \boldsymbol{v}_{b/I}^{b} & \boldsymbol{q}_{I}^{b} & \boldsymbol{\beta}_{a} & \boldsymbol{\beta}_{\omega} & b & \boldsymbol{v}_{g/I}^{I} & \boldsymbol{q}_{c}^{\zeta_{0}} & \rho_{0} & \dots & \boldsymbol{q}_{c}^{\zeta_{n}} & \rho_{n}\end{bmatrix}^{T}.
\end{equation}

\end_inset

Where 
\begin_inset Formula $b$
\end_inset

 is the linear drag term.
 This means that the state vector 
\begin_inset Formula $\boldsymbol{x}$
\end_inset

 will be of size 
\begin_inset Formula $3+3+4+3+3+1+3+5+5n=20+5+5n.$
\end_inset

 However, since each unit quaternion only has two degrees of freedom, the
 covariance matrix, 
\begin_inset Formula $P$
\end_inset

, is defined as 
\begin_inset Formula 
\begin{equation}
P=E\begin{bmatrix}\left(\boldsymbol{x}\boxminus\hat{\boldsymbol{x}}\right)\left(\boldsymbol{x}\boxminus\hat{\boldsymbol{x}}\right)^{T}\end{bmatrix}\in\mathbb{R}^{\left(19+3+3n\right)x\left(19+3+3n\right)}
\end{equation}

\end_inset

The inputs to the system are denoted by 
\begin_inset Formula $\boldsymbol{u}=\begin{bmatrix}\boldsymbol{a}_{b/I}^{I} & \boldsymbol{\omega}_{b/I}^{I}\end{bmatrix}$
\end_inset

 and the input noise, 
\begin_inset Formula $\boldsymbol{\eta}=\begin{bmatrix}\boldsymbol{\eta}_{a} & \boldsymbol{\eta}_{\omega}\end{bmatrix}$
\end_inset

.
 The measured acceleration, 
\begin_inset Formula $\bar{\boldsymbol{a}}_{b/I}^{b}$
\end_inset

, and angular rates, 
\begin_inset Formula $\bar{\boldsymbol{\omega}}_{b/I}^{b}$
\end_inset

 are shown to correspond by
\begin_inset Formula 
\begin{align*}
\boldsymbol{a}_{b/I}^{b} & =\bar{\boldsymbol{a}}_{b/I}^{b}-\beta_{a}-\eta_{a}\\
\boldsymbol{\omega}_{b/I}^{b} & =\bar{\boldsymbol{\omega}}_{b/I}^{I}-\beta_{\omega}-\eta_{\omega}.
\end{align*}

\end_inset

 It should be noted that we assume to know the camera position and angular
 offsets from the body frame, 
\begin_inset Formula $R_{b}^{c}$
\end_inset

 and 
\begin_inset Formula $p_{c/b}^{b}$
\end_inset

.
 With these we can show that the camera linear and angular velocities are
 given by
\begin_inset Formula 
\begin{align*}
\boldsymbol{v}_{c/I}^{c} & =R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)\\
\boldsymbol{\omega}_{c/I}^{c} & =R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}.
\end{align*}

\end_inset

We also note that the velocity of the camera with repect to the goal frame,
 expressed by the camera frame is given by:
\begin_inset Formula 
\begin{equation}
\boldsymbol{v}_{c/g}^{c}=\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}.
\end{equation}

\end_inset

Right now we also have to make this awful assumption that the goal frame
 is not rotating with respect to the inertial frame such that (TODO)
\begin_inset Formula 
\begin{equation}
\boldsymbol{\omega}_{c/g}^{c}=\boldsymbol{\omega}_{c/I}^{c}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Error state formulation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{x}}=\begin{bmatrix}\boldsymbol{\dot{p}}_{b/I}^{I} & \boldsymbol{\dot{v}}_{b/I}^{b} & \boldsymbol{\dot{q}}_{I}^{b} & \dot{\beta}_{a} & \dot{\beta}_{\omega} & \dot{b} & \boldsymbol{\dot{v}}_{g/I}^{I} & \boldsymbol{\dot{q}}_{c}^{\zeta_{0}} & \dot{\rho}_{0} & \dots & \boldsymbol{\dot{q}}_{c}^{\zeta_{n}} & \dot{\rho}_{n}\end{bmatrix}^{T}.
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
True-state Kinematics
\end_layout

\begin_layout Standard
Nominal-state kinematics TODO define the error state dynamics (in discrete
 time preferably)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{p}}_{b/I}^{I}=\left(R_{I}^{b}\right)^{T}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{v}}_{b/I}^{b}=\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\boldsymbol{a}_{b/I}^{b}+R_{I}^{b}\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\boldsymbol{v}_{b/I}^{b}-\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{q}}_{I}^{b}=\frac{1}{2}{\bf q}_{t}\otimes{\bf \omega}_{t}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{a}={\bf a}_{w}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{\omega}={\bf \omega}_{w}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{b}=\boldsymbol{0}
\end{equation}

\end_inset

Here the true acceleration and angular rate are obtained from an IMU in
 the form of noisy sensor readings 
\begin_inset Formula ${\bf a}_{m}$
\end_inset

and 
\begin_inset Formula ${\bf \omega}_{m}$
\end_inset

 in body frame, namely
\begin_inset Formula 
\begin{equation}
{\bf a}_{m}={\bf a}_{t}+{\bf \beta}_{a}+{\bf a}_{noise}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf \omega}_{m}={\bf \omega}_{t}+{\bf \beta}_{\omega}+{\bf \omega}_{noise}
\end{equation}

\end_inset

With this, the true values can be isolated such that
\begin_inset Formula 
\begin{equation}
{\bf a}_{t}={\bf a}_{m}-{\bf \beta}_{a}-{\bf a}_{noise}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf \omega}_{t}={\bf \omega}_{m}-{\bf \beta}_{\omega}-{\bf \omega}_{noise}
\end{equation}

\end_inset

Substituing these into the true kinematic equations we get
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{p}}_{b/I}^{I}=\left(R_{I}^{b}\right)^{T}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{v}}_{b/I}^{b}=\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\left({\bf a}_{m}-{\bf \beta}_{a}-{\bf a}_{noise}\right)+R_{I}^{b}\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\boldsymbol{v}_{b/I}^{b}-\left({\bf \omega}_{m}-{\bf \beta}_{\omega}-{\bf \omega}_{noise}\right)^{\mathcircumflex}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{q}}_{I}^{b}=\frac{1}{2}{\bf q}_{t}\otimes\left({\bf \omega}_{m}-{\bf \beta}_{\omega}-{\bf \omega}_{noise}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{a}={\bf a}_{w}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{\omega}={\bf \omega}_{w}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{b}=\boldsymbol{0}
\end{equation}

\end_inset

These are the state space equations where the state 
\begin_inset Formula ${\bf x}_{t}$
\end_inset

 is given by 
\begin_inset Formula 
\begin{equation}
\boldsymbol{x}_{t}=\begin{bmatrix}\boldsymbol{p}_{b/I}^{I} & \boldsymbol{v}_{b/I}^{b} & \boldsymbol{q}_{I}^{b} & \boldsymbol{\beta}_{a} & \boldsymbol{\beta}_{\omega} & b\end{bmatrix}^{T}.
\end{equation}

\end_inset

And the input is 
\begin_inset Formula 
\begin{equation}
{\bf u}=\begin{bmatrix}{\bf a}_{m}-{\bf a}_{n}\\
{\bf \omega}_{m}-{\bf \omega}_{n}
\end{bmatrix}
\end{equation}

\end_inset

and is perturbed by white Gaussian noise 
\begin_inset Formula ${\bf w}$
\end_inset

 defined by
\begin_inset Formula 
\begin{equation}
{\bf w}=\begin{bmatrix}{\bf a}_{w}\\
{\bf \omega}_{w}
\end{bmatrix}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
The nominal state kinematics
\end_layout

\begin_layout Standard
The nominal-state kinematics corresponds to the modeled system without noises
 or perturbations
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{p}}_{b/I}^{I}=\left(R_{I}^{b}\right)^{T}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{v}}_{b/I}^{b}=\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\left({\bf a}_{m}-{\bf \beta}_{a}\right)+R_{I}^{b}\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\boldsymbol{v}_{b/I}^{b}-\left({\bf \omega}_{m}-{\bf \beta}_{\omega}\right)^{\mathcircumflex}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{q}}_{I}^{b}=\frac{1}{2}{\bf q}_{I}^{b}\otimes\left({\bf \omega}_{m}-{\bf \beta}_{\omega}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{a}=\boldsymbol{0}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{\omega}=\boldsymbol{0}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{b}=\boldsymbol{0}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Error state kinematics derivation
\end_layout

\begin_layout Standard
The error state kinematics are given by the property that 
\begin_inset Formula ${\bf x}_{t}={\bf x}\oplus\delta{\bf x}$
\end_inset

.
 Similarly, 
\begin_inset Formula ${\bf \dot{x}}_{t}=\dot{{\bf x}}\oplus\dot{\delta{\bf x}}$
\end_inset

.
 For most states this is pretty straight forward.
\begin_inset Formula 
\begin{align}
\dot{{\bf p}}_{t} & =\dot{{\bf p}}+\dot{\delta{\bf p}}\\
\dot{\delta{\bf p}} & =\dot{{\bf p}}_{t}-\dot{{\bf p}}\\
 & =\left(R_{t}\right)^{T}\boldsymbol{v}_{t}-\left(R\right)^{T}\boldsymbol{v}
\end{align}

\end_inset

We must deine the relationship
\begin_inset Formula 
\begin{equation}
R_{t}=R\left(I+\left[\delta{\bf \theta}\right]_{x}\right)+O\left(\parallel\delta{\bf \theta\parallel}^{2}\right)
\end{equation}

\end_inset

With this relationship, we can see that
\begin_inset Formula 
\begin{align}
\dot{\delta{\bf p}} & \approx\left(R\left(I+\left[\delta{\bf \theta}\right]_{\times}\right)\right)^{T}\boldsymbol{v}_{t}-\left(R\right)^{T}\boldsymbol{v}\\
 & =\left(I+\left[\delta{\bf \theta}\right]_{\times}\right)^{T}R^{T}\boldsymbol{v}_{t}-\left(R\right)^{T}\boldsymbol{v}\\
 & =\left(I+\left[\delta{\bf \theta}\right]_{\times}\right)^{T}R^{T}\left({\bf v}+\delta{\bf v}\right)-\left(R\right)^{T}\boldsymbol{v}\\
 & =\left(I+\left[\delta{\bf \theta}\right]_{\times}^{T}\right)R^{T}\left({\bf v}+\delta{\bf v}\right)-\left(R\right)^{T}\boldsymbol{v}\\
 & =R^{T}{\bf v}+R^{T}\delta{\bf v}+\left[\delta{\bf \theta}\right]_{\times}^{T}R^{T}{\bf v}+\left[\delta{\bf \theta}\right]_{\times}^{T}R^{T}\delta{\bf v}-\left(R\right)^{T}\boldsymbol{v}\\
 & =R^{T}\delta{\bf v}+\left[\delta{\bf \theta}\right]_{\times}^{T}R^{T}{\bf v}
\end{align}

\end_inset

For velocity we can do the same type of thing
\begin_inset Formula 
\begin{align}
\dot{{\bf v}}_{t} & =\dot{{\bf v}}+\dot{\delta{\bf v}}\\
\dot{\delta{\bf v}} & =\dot{{\bf v}}_{t}-\dot{{\bf v}}\\
 & =\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\left({\bf a}_{m}-{\bf \beta}_{a}-{\bf a}_{noise}\right)+R_{I}^{b}\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\boldsymbol{v}_{b/I}^{b}-\left({\bf \omega}_{m}-{\bf \beta}_{\omega}-{\bf \omega}_{noise}\right)^{\mathcircumflex}\boldsymbol{v}_{b/I}^{b}-\left(\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\left({\bf a}_{m}-{\bf \beta}_{a}\right)+R_{I}^{b}\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\boldsymbol{v}_{b/I}^{b}-\left({\bf \omega}_{m}-{\bf \beta}_{\omega}\right)^{\mathcircumflex}\boldsymbol{v}_{b/I}^{b}\right)
\end{align}

\end_inset

If we let 
\begin_inset Formula 
\begin{equation}
{\bf a}_{body}\overset{\triangle}{=}{\bf a}_{m}-{\bf \beta}_{a}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{align}
{\bf a}_{tbody} & ={\bf a}_{body}+\delta{\bf a}_{body}\\
{\bf a}_{m}-{\bf \beta}_{ta}-{\bf a}_{noise} & ={\bf a}_{m}-{\bf \beta}_{a}+\delta{\bf a}_{body}\\
\delta{\bf a}_{body} & =-{\bf \beta}_{ta}-{\bf a}_{noise}+-{\bf \beta}_{a}\\
 & =-\left(\beta_{a}+\delta\beta_{a}\right)-{\bf a}_{noise}+{\bf \beta}_{a}
\end{align}

\end_inset


\begin_inset Formula 
\begin{equation}
\delta{\bf a}_{body}\overset{\triangle}{=}-\delta\beta_{a}-{\bf a}_{noise}
\end{equation}

\end_inset

Using these identities, we can simplify our equation
\begin_inset Formula 
\begin{align}
\dot{\delta{\bf v}} & =\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\left({\bf a}_{body}+\delta{\bf a}_{body}\right)+\left(R\left(I+\left[\delta{\bf \theta}\right]_{x}\right)\right)\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\left({\bf v}+\delta{\bf v}\right)-\left(\omega_{body}+\delta\omega_{body}\right)^{\wedge}\left({\bf v}+\delta{\bf v}\right)-\left(\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\left({\bf a}_{body}\right)+R\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\boldsymbol{v}-\left(\omega_{body}\right)^{\wedge}\boldsymbol{v}\right)\\
 & =\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\left(\delta{\bf a}_{body}\right)+\left(R\left(\left[\delta{\bf \theta}\right]_{x}\right)\right)\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\left(\delta{\bf v}\right)-\left(\omega_{body}+\delta\omega_{body}\right)^{\wedge}\left({\bf v}+\delta{\bf v}\right)+\left(\omega_{body}\right)^{\wedge}\boldsymbol{v}\\
 & =\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\left(\delta{\bf a}_{body}\right)+\left(R\left(\left[\delta{\bf \theta}\right]_{x}\right)\right)\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\left(\delta{\bf v}\right)-\left(\omega_{body}+\delta\omega_{body}\right)^{\wedge}{\bf v}-\left(\omega_{body}+\delta\omega_{body}\right)^{\wedge}{\bf \delta v}+\left(\omega_{body}\right)^{\wedge}\boldsymbol{v}\\
 & =\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\left(\delta{\bf a}_{body}\right)+\left(R\left(\left[\delta{\bf \theta}\right]_{x}\right)\right)\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\left(\delta{\bf v}\right)-\left(\omega_{body}\right)^{\wedge}{\bf v}-\left(\delta\omega_{body}\right)^{\wedge}{\bf v}-\left(\omega_{body}\right)^{\wedge}\delta{\bf v}-\left(\delta\omega_{body}\right)^{\wedge}\delta{\bf v}+\left(\omega_{body}\right)^{\wedge}\boldsymbol{v}\\
 & =\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\left(\delta{\bf a}_{body}\right)+\left(R\left(\left[\delta{\bf \theta}\right]_{x}\right)\right)\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\left(\delta{\bf v}\right)-\left(\delta\omega_{body}\right)^{\wedge}{\bf v}-\left(\omega_{body}\right)^{\wedge}\delta{\bf v}???
\end{align}

\end_inset

Next for the quaternion
\begin_inset Formula 
\begin{align}
\dot{{\bf q}}_{t} & =\dot{\left({\bf q}\otimes\delta{\bf q}\right)}\\
\frac{1}{2}{\bf q}_{t}\otimes\left({\bf \omega}_{m}-{\bf \beta}_{\omega}-{\bf \omega}_{noise}\right) & =\dot{{\bf q}}\otimes\delta{\bf q}+{\bf q}\otimes\dot{\delta{\bf q}}\\
\frac{1}{2}{\bf q}\otimes\delta{\bf q}\otimes\left({\bf \omega}_{m}-{\bf \beta}_{\omega}-{\bf \omega}_{noise}\right) & =\frac{1}{2}{\bf q}\otimes\left({\bf \omega}_{m}-{\bf \beta}_{\omega}\right)\otimes\delta{\bf q}+{\bf q}\otimes\dot{\delta{\bf q}}\\
\delta{\bf q}\otimes\left({\bf \omega}_{m}-{\bf \beta}_{\omega}-{\bf \omega}_{noise}\right) & =\left({\bf \omega}_{m}-{\bf \beta}_{\omega}\right)\otimes\delta{\bf q}+2\dot{\delta{\bf q}}\\
2\dot{\delta{\bf q}} & =\delta{\bf q}\otimes\left({\bf \omega}_{m}-{\bf \beta}_{\omega}-{\bf \omega}_{noise}\right)-\left({\bf \omega}_{m}-{\bf \beta}_{\omega}\right)\otimes\delta{\bf q}
\end{align}

\end_inset

With some quaternion magic
\begin_inset Formula 
\begin{equation}
\dot{\delta{\bf \theta}}=-\left[\omega_{m}-\beta_{\omega}\right]_{\times}\delta{\bf \theta}-\delta\beta_{\omega}-\omega_{noise}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Goal Velocity Propagation
\end_layout

\begin_layout Standard
Since we assume constant velocity of the goal frame with respect to the
 inertial frame (expressed in the inertial frame), the velocity states need
 no propagation.
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{v}}_{g/I}^{I}=\boldsymbol{0}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Landmark Propagation
\end_layout

\begin_layout Standard
When the landmarks are static in the inertial frame, the landmark propagation
 is defined by
\begin_inset Formula 
\begin{equation}
\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}=-T_{\zeta_{i}}^{T}\left(\boldsymbol{\omega}_{c/I}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/I}^{c}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\rho_{i}}=\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/I}^{c}.
\end{equation}

\end_inset

However, since we assume that the landmarks are only static in the goal
 frame, we instead write the landmark propagation as
\begin_inset Formula 
\begin{equation}
\dot{\boldsymbol{q}}_{c}^{\zeta_{i}}=-T_{\zeta_{i}}^{T}\left(\boldsymbol{\omega}_{c/g}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/g}^{c}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\rho_{i}}=\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/g}^{c}.
\end{equation}

\end_inset

Where we define the velocities as
\begin_inset Formula 
\begin{align*}
\boldsymbol{v}_{c/I}^{c} & =R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)\\
\boldsymbol{\omega}_{c/I}^{c} & =R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}.
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{v}_{c/g}^{c}=\boldsymbol{v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\boldsymbol{v}_{g/I}^{I}.
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\omega}_{c/g}^{c}=\boldsymbol{\omega}_{c/I}^{c}
\end{equation}

\end_inset

To propagate these, we must define the 
\begin_inset Formula $\boxplus$
\end_inset

 operator for the quaternion unit vector
\begin_inset Formula 
\begin{equation}
\boldsymbol{q}_{c}^{\zeta}\boxplus\boldsymbol{\delta}\triangleq\exp\left(T_{\zeta}\boldsymbol{\delta}\right)\otimes\boldsymbol{q}_{c}^{\zeta}
\end{equation}

\end_inset

where
\begin_inset Formula 
\begin{equation}
\boldsymbol{\delta=\dot{\boldsymbol{q}}}_{c}^{\zeta}dt.
\end{equation}

\end_inset

 Now we need to define a few things
\begin_inset Formula 
\begin{equation}
R\left(\boldsymbol{q}\right)=\left(2q_{0}^{2}-1\right)I-2q_{0}\bar{\boldsymbol{q}}^{\mathcircumflex}+2\bar{\boldsymbol{q}}\bar{\boldsymbol{q}}^{T}\in SO\left(3\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\zeta}_{i/c}^{c}=\left(R_{c}^{\zeta_{i}}\right)^{T}e_{3}\in S^{2}\subset\mathbb{R}^{3}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
T_{\zeta_{i}}=\left(R_{c}^{\zeta_{i}}\right)^{T}\left[e_{1}e_{2}\right]\in\mathbb{R}^{3\times2}
\end{equation}

\end_inset

and finally
\begin_inset Formula 
\begin{equation}
\exp\left(\boldsymbol{\delta}\right)\triangleq\begin{bmatrix}\cos\left(\frac{\parallel\boldsymbol{\delta}\parallel}{2}\right)\\
\sin\left(\frac{\parallel\boldsymbol{\delta}\parallel}{2}\right)\frac{\boldsymbol{\delta}}{\parallel\boldsymbol{\delta}\parallel}
\end{bmatrix}
\end{equation}

\end_inset

or the small angle approximation
\begin_inset Formula 
\begin{equation}
\exp\left(\boldsymbol{\delta}\right)\approx\begin{bmatrix}1\\
\frac{\boldsymbol{\delta}}{2}
\end{bmatrix}.
\end{equation}

\end_inset

 For inverse depth it is pretty simple since 
\begin_inset Formula $\boxplus$
\end_inset

 is the same as 
\begin_inset Formula $+$
\end_inset


\begin_inset Formula 
\begin{equation}
\rho_{i}\left(t+dt\right)=\rho_{i}+\dot{\rho}_{i}dt.
\end{equation}

\end_inset


\end_layout

\begin_layout Part
Error State Auto diff example
\end_layout

\begin_layout Standard
This example is taken from 
\begin_inset Quotes eld
\end_inset

Quaternion kinematics for the error-state KF
\begin_inset Quotes erd
\end_inset

 by Joan Sola.
 These equations are taken from the example in section 5, 
\begin_inset Quotes eld
\end_inset

Error-state kinematics for IMU-driven systems.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Section
True-state Kinematics
\end_layout

\begin_layout Standard
We must first show that
\begin_inset Formula 
\begin{align}
{\bf a}_{t} & =R_{t}\left({\bf a}_{m}-{\bf a}_{bt}-{\bf a}_{n}\right)+{\bf g}_{t}\\
{\bf \omega}_{t} & ={\bf \omega}_{m}-{\bf \omega}_{bt}-{\bf \omega}_{n}.
\end{align}

\end_inset

The true state kinematic equations are
\begin_inset Formula 
\begin{align}
\dot{{\bf p}}_{t} & ={\bf v}_{t}\\
\dot{{\bf v}}_{t} & =R_{t}\left({\bf a}_{m}-{\bf a}_{bt}-{\bf a}_{n}\right)+{\bf g}_{t}\\
\dot{{\bf q}}_{t} & =\frac{1}{2}{\bf q}_{t}\otimes\left({\bf \omega}_{m}-{\bf \omega}_{bt}-{\bf \omega}_{n}\right)\\
\dot{{\bf a}}_{bt} & ={\bf a}_{w}\\
\dot{{\bf \omega}}_{bt} & ={\bf \omega}_{w}\\
\dot{{\bf g}}_{t} & =0
\end{align}

\end_inset

We name this 
\begin_inset Formula $\dot{{\bf x}}_{t}=f_{t}\left({\bf x}_{t},{\bf u},{\bf w}\right)$
\end_inset

 with the state 
\begin_inset Formula ${\bf x}_{t}$
\end_inset

 and the noisy IMU readings 
\begin_inset Formula ${\bf u}$
\end_inset

 and the perturbances of white Gaussian noise 
\begin_inset Formula ${\bf w}$
\end_inset

, all defined by
\begin_inset Formula 
\begin{equation}
{\bf x}_{t}=\begin{bmatrix}{\bf p}_{t},{\bf v}_{t},{\bf q}_{t},{\bf a}_{bt},{\bf \omega}_{bt},{\bf g}_{t}\end{bmatrix}^{T}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf u}=\begin{bmatrix}{\bf a}_{m}-{\bf a}_{n},{\bf \omega}_{m}-{\bf \omega}_{n}\end{bmatrix}^{T}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf w}=\begin{bmatrix}{\bf a}_{w},{\bf \omega}_{w}\end{bmatrix}^{T}
\end{equation}

\end_inset

The above true state kinematic equations can also be written as 
\begin_inset Formula $\dot{{\bf x}}_{t}=f_{t}\left({\bf x},\delta{\bf x},{\bf u},{\bf w}\right)$
\end_inset

 
\begin_inset Formula 
\begin{align}
\dot{{\bf p}}_{t} & ={\bf v}+\delta{\bf v}\\
\dot{{\bf v}}_{t} & =R\left({\bf q}\boxplus\delta{\bf \theta}\right)\left({\bf a}_{m}-\left({\bf a}_{b}+\delta{\bf a}_{b}\right)-{\bf a}_{n}\right)+\left({\bf g}+\delta{\bf g}\right)\\
\dot{{\bf q}}_{t} & =\frac{1}{2}\left({\bf q}\boxplus\delta{\bf \theta}\right)\otimes\left({\bf \omega}_{m}-\left({\bf \omega}_{b}+\delta{\bf \omega}_{b}\right)-{\bf \omega}_{n}\right)\\
\dot{{\bf a}}_{bt} & ={\bf a}_{w}\\
\dot{{\bf \omega}}_{bt} & ={\bf \omega}_{w}\\
\dot{{\bf g}}_{t} & =0
\end{align}

\end_inset


\end_layout

\begin_layout Section
Nominal-state kinematics
\end_layout

\begin_layout Standard
The nominal state kinematics correspond to the modeled system without noises
 or perturbation
\begin_inset Formula 
\begin{align}
\dot{{\bf p}} & ={\bf v}\\
\dot{{\bf v}} & =R\left({\bf a}_{m}-{\bf a}_{b}\right)+{\bf g}\\
\dot{{\bf q}} & =\frac{1}{2}{\bf q}\otimes\left({\bf \omega}_{m}-{\bf \omega}_{b}\right)\\
\dot{{\bf a}}_{b} & =0\\
\dot{{\bf \omega}}_{b} & =0\\
\dot{{\bf g}} & =0
\end{align}

\end_inset


\end_layout

\begin_layout Section
The Error-State Kinematics
\end_layout

\begin_layout Standard
The goal is to determine the linearized dynamics of the error-state.
 For each state equation, we write its composition, solving for the error
 state and simplifying all second-order infinitesimals.
 We give here the full error-state dynamic system
\begin_inset Formula 
\begin{align}
\dot{\delta{\bf p}} & ={\bf \delta v}\\
\dot{\delta{\bf v}} & =-R\left[{\bf a}_{m}-{\bf a}_{b}\right]_{\times}\delta{\bf \theta}-R\delta{\bf a}_{b}+\delta{\bf g}-R{\bf a}_{n}\\
\dot{{\bf \delta\theta}} & =-\left[{\bf \omega}_{m}-{\bf \omega}_{b}\right]_{\times}\delta{\bf \theta}-\delta{\bf \omega}_{b}-{\bf \omega}_{n}\\
\dot{\delta{\bf a}}_{b} & ={\bf a}_{w}\\
\dot{\delta{\bf \omega}}_{b} & =\omega_{w}\\
\dot{\delta{\bf g}} & =0
\end{align}

\end_inset


\end_layout

\begin_layout Section
Auto Diff
\end_layout

\begin_layout Standard
The whole idea of error state is that 
\begin_inset Formula ${\bf x}_{t}={\bf x}\boxplus\delta{\bf x}$
\end_inset

.
 Unfortunately, we can't just say this.
\begin_inset Formula 
\begin{align}
{\bf x}_{t} & ={\bf x}\boxplus\delta{\bf x}\\
\dot{{\bf x}}_{t} & ={\bf \dot{x}}\boxplus\dot{\delta{\bf {\bf x}}}\\
\dot{\delta{\bf x}} & =\dot{{\bf x}}_{t}\boxminus\dot{{\bf x}}
\end{align}

\end_inset

Instead we can compute them in discrete time as that is how we will use
 it.
 Assuming we are using Euler integration, the true state at the next time
 step can be given by
\begin_inset Formula 
\begin{equation}
{\bf x}_{k+1}^{t}={\bf x}_{k}^{t}+\dot{{\bf x}}_{k}^{t}\Delta t
\end{equation}

\end_inset

and the nominal state by
\begin_inset Formula 
\begin{equation}
{\bf x}_{k+1}={\bf x}_{k}+\dot{{\bf x}}_{k}\Delta t.
\end{equation}

\end_inset

Or as Jerel pointed out, if we use the dynamics they wrote in the paper
 (i.e.
 
\begin_inset Formula $\dot{q}\in\mathbb{R}^{3}$
\end_inset

instead of 
\begin_inset Formula $\mathbb{R}^{4}$
\end_inset

).
\begin_inset Formula 
\begin{align}
{\bf x}_{k+1}^{t} & ={\bf x}_{k}^{t}\boxplus\dot{{\bf x}}_{k}^{t}\Delta t\\
{\bf x}_{k+1} & ={\bf x}_{k}\boxplus\dot{{\bf x}}_{k}\Delta t.
\end{align}

\end_inset

With these we can see that
\begin_inset Formula 
\begin{equation}
\delta{\bf x}_{k+1}={\bf x}_{k+1}^{t}\boxminus{\bf x}_{k+1}
\end{equation}

\end_inset

What we want is the jacobian given by 
\begin_inset Formula $\frac{\partial\left(\delta{\bf x}_{k+1}\right)}{\partial\left(\delta{\bf x}_{k}\right)}$
\end_inset

.
 Note that 
\begin_inset Formula 
\begin{align}
\dot{{\bf x}}_{k}^{t} & =\dot{\left({\bf x}_{k}+\delta{\bf x}_{k}\right)}\\
 & =f({\bf x}_{k}+\delta{\bf x}_{k},{\bf u})
\end{align}

\end_inset


\end_layout

\begin_layout Standard
There are a few things....
 I need to hardcode in this....
\begin_inset Formula 
\begin{equation}
\lim_{\delta x\arrownot\to0}\frac{}{}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\cos\left(\theta\right)=\frac{1}{2}\sqrt{x_{1}^{2}+x_{2}^{2}+x_{3}^{2}}
\end{equation}

\end_inset


\end_layout

\begin_layout Part
Moving/Rotating UAV, Moving/Rotating Vehicle
\end_layout

\begin_layout Standard
As we have shown in the previous section, if we know the true state and
 nominal state dynamics, we can use autodiff to get the error state jacobians.
 So even though the math is really nasty, let us derive the nominal state
 equations.
\end_layout

\begin_layout Section
State Vector
\end_layout

\begin_layout Standard
We will split the state into 3 components, the uav states, 
\begin_inset Formula ${\bf x}_{uav}$
\end_inset

, the vehicle states, 
\begin_inset Formula ${\bf x}_{vehicle}$
\end_inset

, and the landmark states, 
\begin_inset Formula ${\bf x}_{landmarks}$
\end_inset

.
 The total state vector is then given by 
\begin_inset Formula 
\begin{align}
{\bf x} & =\left[{\bf x}_{\text{uav}}^{\top},{\bf x}_{\text{vehicle}}^{\top},{\bf x}_{\text{landmarks}}^{\top}\right]^{\top}\\
{\bf u} & =\begin{bmatrix}\left(\bar{{\bf a}}_{b/I}^{b}-{\bf \eta}_{a}\right)^{\top} & \left(\bar{{\bf \omega}}_{b/I}^{b}-{\bf \eta}_{\omega}\right)^{\top}\end{bmatrix}^{\top}
\end{align}

\end_inset

Each component is given by the following:
\begin_inset Formula 
\begin{equation}
{\bf x}_{\text{uav}}=\begin{bmatrix}\boldsymbol{p}_{b/I}^{I}\\
\boldsymbol{v}_{b/I}^{b}\\
\boldsymbol{q}_{I}^{b}\\
\boldsymbol{\beta}_{a}\\
\boldsymbol{\beta}_{\omega}\\
b
\end{bmatrix}\in\mathbb{R}^{17\times1}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf x}_{\text{vehicle}}=\begin{bmatrix}\boldsymbol{v}_{g/I}^{g}\\
\boldsymbol{q}_{I}^{g}\\
{\bf \omega}_{g/I}^{g}
\end{bmatrix}\in\mathbb{R}^{10\times1}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf x}_{\text{landmarks}}=\begin{bmatrix}\boldsymbol{q}_{c}^{\zeta_{g}}\\
\rho_{g}\\
\boldsymbol{q}_{c}^{\zeta_{1}}\\
\rho_{g}\\
\vdots\\
\boldsymbol{q}_{c}^{\zeta_{N}}\\
\rho_{N}
\end{bmatrix}\in\mathbb{R}^{\left(5+5N\right)\times1}.
\end{equation}

\end_inset

This means that the overall state 
\begin_inset Formula ${\bf x}\in\mathbb{R}^{(17+10+5+5N)x1}=\mathbb{R}^{(32+5N)x1}$
\end_inset

.
\end_layout

\begin_layout Section
State Dynamics
\end_layout

\begin_layout Standard
To simplify this, we will derive the dynamics in sections corresponding
 to how we split up the state vector.
\end_layout

\begin_layout Subsection
UAV Dynamics
\end_layout

\begin_layout Standard
These dynamics are grabbed from James and Jerel's paper.
\end_layout

\begin_layout Standard
TODO check the quaternion dynamics, local to global, global to local?
\begin_inset Formula 
\begin{equation}
{\bf \dot{x}}_{uav}=\begin{bmatrix}\boldsymbol{\dot{p}}_{b/I}^{I}\\
\boldsymbol{\dot{v}}_{b/I}^{b}\\
\boldsymbol{\dot{q}}_{I}^{b}\\
\boldsymbol{\dot{\beta}}_{a}\\
\boldsymbol{\dot{\beta}}_{\omega}\\
\dot{b}
\end{bmatrix}\in\mathbb{R}^{16x1}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf \dot{x}}_{uav}=\begin{bmatrix}\left(R_{I}^{b}\right)^{T}\boldsymbol{v}_{b/I}^{b}\\
\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\boldsymbol{a}_{b/I}^{b}+R_{I}^{b}\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\boldsymbol{v}_{b/I}^{b}-\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{v}_{b/I}^{b}\\
{\bf \omega}\\
{\bf a}_{w}\\
{\bf \omega}_{w}\\
\boldsymbol{0}
\end{bmatrix}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Vehicle Dynamics
\end_layout

\begin_layout Standard
The vehicle dynamics are the novel part of this estimator.
 To simplify things, we will assume that the vehicle moves with an approximately
 constant velocity (in the goal frame) and an approximately constant angular
 acceleration (with respect to the inertial frame).
 Note that we really don't care about the position of the vehicle, only
 its motion.
 If we need to we can add the position of the vehicle as a state that we
 can use GPS on the vehicle to update.
\end_layout

\begin_layout Standard
TODO check the quaternion dynamics, local to global, global to local?
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
{\bf \dot{x}}_{\text{vehicle}}=\begin{bmatrix}\dot{\boldsymbol{v}}_{g/I}^{g}\\
\boldsymbol{\dot{q}}_{I}^{g}\\
{\bf \dot{\omega}}_{g/I}^{g}
\end{bmatrix}\in\mathbb{R}^{9\times1}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf \dot{x}}_{\text{vehicle}}=\begin{bmatrix}{\bf 0}+{\bf \eta}_{v}\\
{\bf \omega}\\
{\bf 0}+{\bf \eta}_{\omega}
\end{bmatrix}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Landmark Dynamics
\end_layout

\begin_layout Standard
We assume that we are able to detect and track visual features on the moving
 vehicle.
 Each of these features belongs to the same rigid body we call the 
\begin_inset Quotes eld
\end_inset

vehicle
\begin_inset Quotes erd
\end_inset

.
\begin_inset Formula 
\begin{equation}
{\bf \dot{x}}_{\text{landmarks}}=\begin{bmatrix}\boldsymbol{\dot{q}}_{c}^{\zeta_{g}}\\
\dot{\rho}_{g}\\
\boldsymbol{\dot{q}}_{c}^{\zeta_{1}}\\
\dot{\rho}_{g}\\
\vdots\\
\boldsymbol{\dot{q}}_{c}^{\zeta_{N}}\\
\dot{\rho}_{N}
\end{bmatrix}\in\mathbb{R}^{\left(3+3N\right)\times1}
\end{equation}

\end_inset

These dynamics are also from James and Jerel's paper.
 However, since they assume that the landmarks are attached to the inertial
 frame, they use 
\begin_inset Formula ${\bf v}_{c/I}^{c}$
\end_inset

 and 
\begin_inset Formula ${\bf \omega}_{c/I}^{c}$
\end_inset

.
 Since the landmarks are moving, we use 
\begin_inset Formula ${\bf v}_{c/i}^{c}$
\end_inset

 and 
\begin_inset Formula ${\bf \omega}_{c/i}^{c}$
\end_inset

 where 
\begin_inset Formula $i$
\end_inset

 corresponds to the specific landmark.
 In terms of the states and constants, we can derive these expressions.
\begin_inset Formula 
\begin{align}
\boldsymbol{v}_{c/I}^{c} & =R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)\\
\boldsymbol{v}_{i/I}^{g} & =\boldsymbol{v}_{g/I}^{g}+\left(\boldsymbol{\omega}_{g/I}^{g}\right)^{\mathcircumflex}\boldsymbol{p}_{i/g}^{g}
\end{align}

\end_inset

We do this by first taking the position of the landmark 
\begin_inset Formula $i$
\end_inset

 in the inertial frame as
\begin_inset Formula 
\begin{equation}
{\bf p}_{i/I}^{I}={\bf p}_{g/I}^{I}+\left(R_{I}^{g}\right)^{\top}{\bf p}_{i/g}^{g}
\end{equation}

\end_inset

Taking the time derivative we get
\begin_inset Formula 
\begin{align}
\frac{d}{dt}{\bf p}_{i/I}^{I} & =\frac{d}{dt}{\bf p}_{g/I}^{I}+\frac{d}{dt}\left(\left(R_{I}^{g}\right)^{\top}{\bf p}_{i/g}^{g}\right)\\
{\bf v}_{i/I}^{I} & ={\bf v}_{g/I}^{I}+\frac{d\left(R_{I}^{g}\right)^{\top}}{dt}{\bf p}_{i/g}^{g}+\left(R_{I}^{g}\right)^{\top}\frac{d{\bf p}_{i/g}^{g}}{dt}
\end{align}

\end_inset

Since we assume that the landmark 
\begin_inset Formula $i$
\end_inset

 is fixed with respect to the goal frame, we can simplify to
\begin_inset Formula 
\begin{align}
{\bf v}_{i/I}^{I} & ={\bf v}_{g/I}^{I}+\frac{d\left(R_{I}^{g}\right)^{\top}}{dt}{\bf p}_{i/g}^{g}\\
{\bf v}_{i/I}^{I} & ={\bf v}_{g/I}^{I}+\left(R_{I}^{g}\right)^{\top}\left({\bf \omega}_{g/I}^{g}\right)^{\wedge}{\bf p}_{i/g}^{g}
\end{align}

\end_inset

Since we want all of this in the camera frame we get
\begin_inset Formula 
\begin{align}
R_{b}^{c}R_{I}^{b}{\bf v}_{i/I}^{I} & =R_{b}^{c}R_{I}^{b}{\bf v}_{g/I}^{I}+R_{b}^{c}R_{I}^{b}\left(R_{I}^{g}\right)^{\top}\left({\bf \omega}_{g/I}^{g}\right)^{\wedge}{\bf p}_{i/g}^{g}\\
{\bf v}_{i/I}^{c} & =R_{b}^{c}R_{I}^{b}\left(\left(R_{I}^{g}\right)^{\top}{\bf v}_{g/I}^{g}\right)+R_{b}^{c}R_{I}^{b}\left(R_{I}^{g}\right)^{\top}\left({\bf \omega}_{g/I}^{g}\right)^{\wedge}{\bf p}_{i/g}^{g}
\end{align}

\end_inset

However we still aren't fully there since we need to respresent 
\begin_inset Formula ${\bf p}_{i/g}$
\end_inset

 in the camera frame.
 This is done 
\begin_inset Formula 
\begin{equation}
{\bf v}_{i/I}^{c}=R_{b}^{c}R_{I}^{b}\left(\left(R_{I}^{g}\right)^{\top}{\bf v}_{g/I}^{g}\right)+R_{b}^{c}R_{I}^{b}\left(R_{I}^{g}\right)^{\top}\left({\bf \omega}_{g/I}^{g}\right)^{\wedge}\left(R_{I}^{g}R_{b}^{I}R_{c}^{b}{\bf p}_{i/g}^{c}\right)
\end{equation}

\end_inset

Which can probably be simplified......
 TODO
\begin_inset Formula 
\begin{align}
\boldsymbol{p}_{i/c}^{c} & =\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}\\
\boldsymbol{p}_{g/c}^{c} & =\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
\boldsymbol{p}_{i/g}^{c} & =\boldsymbol{p}_{i/c}^{c}-\boldsymbol{p}_{g/c}^{c}\\
\boldsymbol{p}_{i/g}^{g} & =R_{I}^{g}R_{b}^{I}R_{c}^{b}\boldsymbol{p}_{i/g}^{c}\\
 & =R_{I}^{g}R_{b}^{I}R_{c}^{b}\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)
\end{align}

\end_inset

TODO I can probably simplify this a lot.
 The rotations cancel with the rotation on the inside
\begin_inset Formula 
\begin{align}
\boldsymbol{v}_{i/I}^{c} & =R_{b}^{c}R_{I}^{b}R_{g}^{I}\left(\boldsymbol{v}_{g/I}^{g}+\left(\boldsymbol{\omega}_{g/I}^{g}\right)^{\mathcircumflex}R_{I}^{g}R_{b}^{I}R_{c}^{b}\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)\right)\\
 & =\left(R_{b}^{c}R_{I}^{b}R_{g}^{I}\boldsymbol{v}_{g/I}^{g}-\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{\omega}_{g/I}^{g}\right)\right)??????
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
{\bf v}_{c/i}^{c} & =\boldsymbol{v}_{c/I}^{c}-\boldsymbol{v}_{i/I}^{c}\\
 & =R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\wedge}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}R_{I}^{b}R_{g}^{I}\boldsymbol{v}_{g/I}^{g}-\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)^{\wedge}\left(\boldsymbol{\omega}_{g/I}^{g}\right)\right)
\end{align}

\end_inset

 The angular velocity terms are a lot simpler ( I think, we should check
 this those)
\begin_inset Formula 
\begin{align}
\boldsymbol{\omega}_{c/I}^{c} & =R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}\\
\boldsymbol{\omega}_{g/I}^{c} & =R_{b}^{c}R_{I}^{b}R_{g}^{I}\boldsymbol{\omega}_{g/I}^{g}\\
\boldsymbol{\omega}_{i/I}^{c} & =R_{b}^{c}R_{I}^{b}R_{g}^{I}\boldsymbol{\omega}_{g/I}^{g}
\end{align}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf \omega}_{c/i}^{c}=\boldsymbol{\omega}_{c/I}^{c}-\boldsymbol{\omega}_{i/I}^{c}
\end{equation}

\end_inset

Using these formulas, we can write
\begin_inset Formula 
\begin{align}
\dot{\boldsymbol{q}}_{c}^{\zeta_{g}} & =-T_{\zeta_{g}}^{T}\left(\boldsymbol{\omega}_{c/g}^{c}+\rho_{g}\left(\boldsymbol{\zeta}_{g/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/g}^{c}\right)\\
\dot{\rho_{g}} & =\rho_{g}^{2}\left(\boldsymbol{\zeta}_{g/c}^{c}\right)^{T}\boldsymbol{v}_{c/g}^{c}\\
\dot{\boldsymbol{q}}_{c}^{\zeta_{i}} & =-T_{\zeta_{i}}^{\top}\left(\boldsymbol{\omega}_{c/i}^{c}+\rho_{i}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\wedge}\boldsymbol{v}_{c/i}^{c}\right)\\
\dot{\rho}_{i} & =\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\top}\boldsymbol{v}_{c/i}^{c}
\end{align}

\end_inset

Fully expanded so I can see this
\begin_inset Formula 
\begin{align}
\dot{\boldsymbol{q}}_{c}^{\zeta_{i}} & =-T_{\zeta_{i}}^{T}\left(R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}+\rho_{g}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}R_{I}^{b}R_{g}^{I}\boldsymbol{v}_{g/I}^{g}-\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{\omega}_{g/I}^{g}\right)\right)\right)\right)\\
\dot{\rho}_{i} & =\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}R_{I}^{b}R_{g}^{I}\boldsymbol{v}_{g/I}^{g}-\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{\omega}_{g/I}^{g}\right)\right)\right)
\end{align}

\end_inset


\end_layout

\begin_layout Section
Error State Dynamics
\end_layout

\begin_layout Subsection
Landmark Dynamics
\end_layout

\begin_layout Standard
From the previous section we have
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\dot{\boldsymbol{q}}_{c}^{\zeta_{g}} & =-T_{\zeta_{g}}^{T}\left(\boldsymbol{\omega}_{c/g}^{c}+\rho_{g}\left(\boldsymbol{\zeta}_{g/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/g}^{c}\right)\\
\dot{\rho_{g}} & =\rho_{g}^{2}\left(\boldsymbol{\zeta}_{g/c}^{c}\right)^{T}\boldsymbol{v}_{c/g}^{c}\\
\dot{\boldsymbol{q}}_{c}^{\zeta_{i}} & =-T_{\zeta_{i}}^{T}\left(\boldsymbol{\omega}_{c/i}^{c}+\rho_{g}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\boldsymbol{v}_{c/i}^{c}\right)\\
\dot{\rho}_{i} & =\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\boldsymbol{v}_{c/i}^{c}
\end{align}

\end_inset

or
\begin_inset Formula 
\begin{align}
\dot{\boldsymbol{q}}_{c}^{\zeta_{i}} & =-T_{\zeta_{i}}^{T}\left(R_{b}^{c}\boldsymbol{\omega}_{b/I}^{b}+\rho_{g}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{\mathcircumflex}\left(R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}R_{I}^{b}R_{g}^{I}\boldsymbol{v}_{g/I}^{g}-\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{\omega}_{g/I}^{g}\right)\right)\right)\right)\\
\dot{\rho}_{i} & =\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}R_{I}^{b}R_{g}^{I}\boldsymbol{v}_{g/I}^{g}-\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{\omega}_{g/I}^{g}\right)\right)\right)
\end{align}

\end_inset

We must convert this to the error state representation.
\end_layout

\begin_layout Subsubsection
Feature Quaternion
\end_layout

\begin_layout Standard
Blah blah
\end_layout

\begin_layout Subsubsection
Inverse Depth
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\rho_{i} & =\hat{\rho}_{i}+\tilde{\rho}_{i}\\
\dot{\rho}_{i} & =\dot{\hat{\rho}}_{i}+\dot{\tilde{\rho}}_{i}\\
\dot{\tilde{\rho}}_{i} & =\dot{\rho}_{i}-\dot{\hat{\rho}}_{i}
\end{align}

\end_inset

Remember that
\begin_inset Formula 
\begin{align}
R_{c}^{\zeta_{i}} & =\hat{R}_{c}^{\zeta_{i}}\tilde{R}_{c}^{\zeta_{i}}\\
\tilde{R}_{c}^{\zeta_{i}} & \approx I-\left(\hat{T}_{\zeta_{i}}\tilde{{\bf q}}_{c}^{\zeta_{i}}\right)^{\wedge}
\end{align}

\end_inset

And I think it is true for a general rotation matrix as well i.e.TODO check
 this
\begin_inset Formula 
\begin{equation}
R_{I}^{b}=\hat{R}_{I}^{b}\tilde{R}_{I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{align}
T_{\zeta_{i}} & =\left(R_{c}^{\zeta_{i}}\right)^{\top}\begin{bmatrix}{\bf e}_{1} & {\bf e}_{2}\end{bmatrix}\\
{\bf \zeta}_{i/c}^{c} & =\left(R_{c}^{\zeta_{i}}\right)^{\top}{\bf e}_{3}
\end{align}

\end_inset

Plugging it all in
\begin_inset Formula 
\begin{align}
\dot{\tilde{\rho}}_{i} & =\rho_{i}^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(R_{b}^{c}\left(\boldsymbol{v}_{b/I}^{b}+\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}R_{I}^{b}R_{g}^{I}\boldsymbol{v}_{g/I}^{g}-\left(\frac{1}{\rho_{i}}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\rho_{g}}\boldsymbol{\zeta}_{g/c}^{c}\right)^{\mathcircumflex}\left(\boldsymbol{\omega}_{g/I}^{g}\right)\right)\right)-\hat{\rho}_{i}^{2}\left(\hat{\boldsymbol{\zeta}}_{i/c}^{c}\right)^{T}\hat{\boldsymbol{v}}_{c/i}^{c}\\
 & =\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)^{2}\left(\boldsymbol{\zeta}_{i/c}^{c}\right)^{T}\left(R_{b}^{c}\left(\left(\hat{\boldsymbol{v}}_{b/I}^{b}+\tilde{\boldsymbol{v}}_{b/I}^{b}\right)+\left(\boldsymbol{\bar{\omega}}_{b/I}^{b}-{\bf \beta}_{\omega}-{\bf \eta}_{\omega}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}R_{I}^{b}R_{g}^{I}\left(\hat{\boldsymbol{v}}_{g/I}^{g}+\tilde{\boldsymbol{v}}_{g/I}^{g}\right)-\left(\frac{1}{\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)}\boldsymbol{\zeta}_{i/c}^{c}-\frac{1}{\left(\hat{\rho}_{g}+\tilde{\rho}_{g}\right)}\boldsymbol{\zeta}_{g/c}^{c}\right)^{\mathcircumflex}\left(\hat{\boldsymbol{\omega}}_{g/I}^{g}+\tilde{\boldsymbol{\omega}}_{g/I}^{g}\right)\right)\right)-\hat{\rho}_{i}^{2}\left(\hat{\boldsymbol{\zeta}}_{i/c}^{c}\right)^{T}\hat{\boldsymbol{v}}_{c/i}^{c}\\
 & =\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)^{2}\left(\left(R_{c}^{\zeta_{i}}\right)^{\top}{\bf e}_{3}\right)^{T}\left(R_{b}^{c}\left(\left(\hat{\boldsymbol{v}}_{b/I}^{b}+\tilde{\boldsymbol{v}}_{b/I}^{b}\right)+\left(\boldsymbol{\bar{\omega}}_{b/I}^{b}-{\bf \beta}_{\omega}-{\bf \eta}_{\omega}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}R_{I}^{b}R_{g}^{I}\left(\hat{\boldsymbol{v}}_{g/I}^{g}+\tilde{\boldsymbol{v}}_{g/I}^{g}\right)-\left(\frac{1}{\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)}\left(\left(R_{c}^{\zeta_{i}}\right)^{\top}{\bf e}_{3}\right)-\frac{1}{\left(\hat{\rho}_{g}+\tilde{\rho}_{g}\right)}\left(\left(R_{c}^{\zeta_{g}}\right)^{\top}{\bf e}_{3}\right)\right)^{\mathcircumflex}\left(\hat{\boldsymbol{\omega}}_{g/I}^{g}+\tilde{\boldsymbol{\omega}}_{g/I}^{g}\right)\right)\right)-\hat{\rho}_{i}^{2}\left(\hat{\boldsymbol{\zeta}}_{i/c}^{c}\right)^{T}\hat{\boldsymbol{v}}_{c/i}^{c}\\
 & =\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)^{2}\left(\left(R_{c}^{\zeta_{i}}\right)^{\top}{\bf e}_{3}\right)^{T}\left(R_{b}^{c}\left(\left(\hat{\boldsymbol{v}}_{b/I}^{b}+\tilde{\boldsymbol{v}}_{b/I}^{b}\right)+\left(\boldsymbol{\bar{\omega}}_{b/I}^{b}-{\bf \hat{\beta}}_{\omega}-{\bf \tilde{\beta}}_{\omega}-{\bf \eta}_{\omega}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}R_{I}^{b}R_{g}^{I}\left(\hat{\boldsymbol{v}}_{g/I}^{g}+\tilde{\boldsymbol{v}}_{g/I}^{g}\right)-\left(\frac{1}{\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)}\left(\left(R_{c}^{\zeta_{i}}\right)^{\top}{\bf e}_{3}\right)-\frac{1}{\left(\hat{\rho}_{g}+\tilde{\rho}_{g}\right)}\left(\left(R_{c}^{\zeta_{g}}\right)^{\top}{\bf e}_{3}\right)\right)^{\mathcircumflex}\left(\hat{\boldsymbol{\omega}}_{g/I}^{g}+\tilde{\boldsymbol{\omega}}_{g/I}^{g}\right)\right)\right)-\hat{\rho}_{i}^{2}\left(\hat{\boldsymbol{\zeta}}_{i/c}^{c}\right)^{T}\hat{\boldsymbol{v}}_{c/i}^{c}\\
 & =\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)^{2}\left(\left(\hat{R}_{c}^{\zeta_{i}}\tilde{R}_{c}^{\zeta_{i}}\right)^{\top}{\bf e}_{3}\right)^{T}\left(R_{b}^{c}\left(\left(\hat{\boldsymbol{v}}_{b/I}^{b}+\tilde{\boldsymbol{v}}_{b/I}^{b}\right)+\left(\boldsymbol{\bar{\omega}}_{b/I}^{b}-{\bf \hat{\beta}}_{\omega}-{\bf \tilde{\beta}}_{\omega}-{\bf \eta}_{\omega}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}\left(\hat{R}_{I}^{b}\tilde{R}_{I}^{b}\right)\left(\hat{R}_{g}^{I}\tilde{R}_{g}^{I}\right)\left(\hat{\boldsymbol{v}}_{g/I}^{g}+\tilde{\boldsymbol{v}}_{g/I}^{g}\right)-\left(\frac{1}{\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)}\left(\left(\hat{R}_{c}^{\zeta_{i}}\tilde{R}_{c}^{\zeta_{i}}\right)^{\top}{\bf e}_{3}\right)-\frac{1}{\left(\hat{\rho}_{g}+\tilde{\rho}_{g}\right)}\left(\left(\hat{R}_{c}^{\zeta_{g}}\tilde{R}_{c}^{\zeta_{g}}\right)^{\top}{\bf e}_{3}\right)\right)^{\mathcircumflex}\left(\hat{\boldsymbol{\omega}}_{g/I}^{g}+\tilde{\boldsymbol{\omega}}_{g/I}^{g}\right)\right)\right)-\hat{\rho}_{i}^{2}\left(\hat{\boldsymbol{\zeta}}_{i/c}^{c}\right)^{T}\hat{\boldsymbol{v}}_{c/i}^{c}\\
 & =\left(\hat{\rho}_{i}^{2}+2\hat{\rho}_{i}\tilde{\rho}_{i}+\tilde{\rho}_{i}^{2}\right)\left(\left(\hat{R}_{c}^{\zeta_{i}}\left(I-\left(\hat{T}_{\zeta_{i}}\tilde{{\bf q}}_{c}^{\zeta_{i}}\right)^{\wedge}\right)\right)^{\top}{\bf e}_{3}\right)^{T}\left(R_{b}^{c}\left(\left(\hat{\boldsymbol{v}}_{b/I}^{b}+\tilde{\boldsymbol{v}}_{b/I}^{b}\right)+\left(\boldsymbol{\bar{\omega}}_{b/I}^{b}-{\bf \hat{\beta}}_{\omega}-{\bf \tilde{\beta}}_{\omega}-{\bf \eta}_{\omega}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}\left(\hat{R}_{I}^{b}\tilde{R}_{I}^{b}\right)\left(\hat{R}_{g}^{I}\tilde{R}_{g}^{I}\right)\left(\hat{\boldsymbol{v}}_{g/I}^{g}+\tilde{\boldsymbol{v}}_{g/I}^{g}\right)-\left(\frac{1}{\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)}\left(\left(\hat{R}_{c}^{\zeta_{i}}\left(I-\left(\hat{T}_{\zeta_{i}}\tilde{{\bf q}}_{c}^{\zeta_{i}}\right)^{\wedge}\right)\right)^{\top}{\bf e}_{3}\right)-\frac{1}{\left(\hat{\rho}_{g}+\tilde{\rho}_{g}\right)}\left(\left(\hat{R}_{c}^{\zeta_{g}}\left(I-\left(\hat{T}_{\zeta_{g}}\tilde{{\bf q}}_{c}^{\zeta_{g}}\right)^{\wedge}\right)\right)^{\top}{\bf e}_{3}\right)\right)^{\mathcircumflex}\left(\hat{\boldsymbol{\omega}}_{g/I}^{g}+\tilde{\boldsymbol{\omega}}_{g/I}^{g}\right)\right)\right)-\hat{\rho}_{i}^{2}\left(\hat{\boldsymbol{\zeta}}_{i/c}^{c}\right)^{T}\hat{\boldsymbol{v}}_{c/i}^{c}\\
 & =\left(\hat{\rho}_{i}^{2}+2\hat{\rho}_{i}\tilde{\rho}_{i}+\tilde{\rho}_{i}^{2}\right)\left(\left(I+\left(\hat{T}_{\zeta_{i}}\tilde{{\bf q}}_{c}^{\zeta_{i}}\right)^{\wedge}\right){\bf \hat{\zeta}}_{i/c}^{c}\right)^{T}\left(R_{b}^{c}\left(\left(\hat{\boldsymbol{v}}_{b/I}^{b}+\tilde{\boldsymbol{v}}_{b/I}^{b}\right)+\left(\boldsymbol{\bar{\omega}}_{b/I}^{b}-{\bf \hat{\beta}}_{\omega}-{\bf \tilde{\beta}}_{\omega}-{\bf \eta}_{\omega}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}\left(\hat{R}_{I}^{b}\tilde{R}_{I}^{b}\right)\left(\hat{R}_{g}^{I}\tilde{R}_{g}^{I}\right)\left(\hat{\boldsymbol{v}}_{g/I}^{g}+\tilde{\boldsymbol{v}}_{g/I}^{g}\right)-\left(\frac{1}{\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)}\left(\left(I+\left(\hat{T}_{\zeta_{i}}\tilde{{\bf q}}_{c}^{\zeta_{i}}\right)^{\wedge}\right){\bf \hat{\zeta}}_{i/c}^{c}\right)-\frac{1}{\left(\hat{\rho}_{g}+\tilde{\rho}_{g}\right)}\left(\left(I+\left(\hat{T}_{\zeta_{g}}\tilde{{\bf q}}_{c}^{\zeta_{g}}\right)^{\wedge}\right){\bf \hat{\zeta}}_{g/c}^{c}\right)\right)^{\mathcircumflex}\left(\hat{\boldsymbol{\omega}}_{g/I}^{g}+\tilde{\boldsymbol{\omega}}_{g/I}^{g}\right)\right)\right)-\hat{\rho}_{i}^{2}\left(\hat{\boldsymbol{\zeta}}_{i/c}^{c}\right)^{T}\hat{\boldsymbol{v}}_{c/i}^{c}\\
 & =\left(\hat{\rho}_{i}^{2}+2\hat{\rho}_{i}\tilde{\rho}_{i}+\tilde{\rho}_{i}^{2}\right)\left({\bf \hat{\zeta}}_{i/c}^{c}\right)^{\top}\left(I-\left(\hat{T}_{\zeta_{i}}\tilde{{\bf q}}_{c}^{\zeta_{i}}\right)^{\wedge}\right)\left(R_{b}^{c}\left(\left(\hat{\boldsymbol{v}}_{b/I}^{b}+\tilde{\boldsymbol{v}}_{b/I}^{b}\right)+\left(\boldsymbol{\bar{\omega}}_{b/I}^{b}-{\bf \hat{\beta}}_{\omega}-{\bf \tilde{\beta}}_{\omega}-{\bf \eta}_{\omega}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}\left(\hat{R}_{I}^{b}\tilde{R}_{I}^{b}\right)\left(\hat{R}_{g}^{I}\tilde{R}_{g}^{I}\right)\left(\hat{\boldsymbol{v}}_{g/I}^{g}+\tilde{\boldsymbol{v}}_{g/I}^{g}\right)-\left(\frac{1}{\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)}\left(\left(I+\left(\hat{T}_{\zeta_{i}}\tilde{{\bf q}}_{c}^{\zeta_{i}}\right)^{\wedge}\right){\bf \hat{\zeta}}_{i/c}^{c}\right)-\frac{1}{\left(\hat{\rho}_{g}+\tilde{\rho}_{g}\right)}\left(\left(I+\left(\hat{T}_{\zeta_{g}}\tilde{{\bf q}}_{c}^{\zeta_{g}}\right)^{\wedge}\right){\bf \hat{\zeta}}_{g/c}^{c}\right)\right)^{\mathcircumflex}\left(\hat{\boldsymbol{\omega}}_{g/I}^{g}+\tilde{\boldsymbol{\omega}}_{g/I}^{g}\right)\right)\right)-\hat{\rho}_{i}^{2}\left(\hat{\boldsymbol{\zeta}}_{i/c}^{c}\right)^{T}\hat{\boldsymbol{v}}_{c/i}^{c}\\
 & =\left(\hat{\rho}_{i}^{2}+2\hat{\rho}_{i}\tilde{\rho}_{i}\right)\left({\bf \hat{\zeta}}_{i/c}^{c}\right)^{\top}\left(I-\left(\hat{T}_{\zeta_{i}}\tilde{{\bf q}}_{c}^{\zeta_{i}}\right)^{\wedge}\right)\left(R_{b}^{c}\left(\left(\hat{\boldsymbol{v}}_{b/I}^{b}+\tilde{\boldsymbol{v}}_{b/I}^{b}\right)+\left(\boldsymbol{\bar{\omega}}_{b/I}^{b}-{\bf \hat{\beta}}_{\omega}-{\bf \tilde{\beta}}_{\omega}-{\bf \eta}_{\omega}\right)^{\mathcircumflex}\boldsymbol{p}_{c/b}^{b}\right)-\left(R_{b}^{c}\left(\hat{R}_{I}^{b}\tilde{R}_{I}^{b}\right)\left(\hat{R}_{g}^{I}\tilde{R}_{g}^{I}\right)\left(\hat{\boldsymbol{v}}_{g/I}^{g}+\tilde{\boldsymbol{v}}_{g/I}^{g}\right)-\left(\frac{1}{\left(\hat{\rho}_{i}+\tilde{\rho}_{i}\right)}\left(\left(I+\left(\hat{T}_{\zeta_{i}}\tilde{{\bf q}}_{c}^{\zeta_{i}}\right)^{\wedge}\right){\bf \hat{\zeta}}_{i/c}^{c}\right)-\frac{1}{\left(\hat{\rho}_{g}+\tilde{\rho}_{g}\right)}\left(\left(I+\left(\hat{T}_{\zeta_{g}}\tilde{{\bf q}}_{c}^{\zeta_{g}}\right)^{\wedge}\right){\bf \hat{\zeta}}_{g/c}^{c}\right)\right)^{\mathcircumflex}\left(\hat{\boldsymbol{\omega}}_{g/I}^{g}+\tilde{\boldsymbol{\omega}}_{g/I}^{g}\right)\right)\right)-\hat{\rho}_{i}^{2}\left(\hat{\boldsymbol{\zeta}}_{i/c}^{c}\right)^{T}\hat{\boldsymbol{v}}_{c/i}^{c}\\
 & blah\\
 & blah
\end{align}

\end_inset


\end_layout

\begin_layout Section
Measurement Models
\end_layout

\begin_layout Subsection
Goal Orientation
\end_layout

\begin_layout Standard
The only new measurement model that we need is a measurement of the goal
 orientation.
 We get this from the ArUco measurements where we get a measurement of the
 rotation from the camera frame to the goal (ArUco) frame.
\begin_inset Formula 
\begin{equation}
h\left({\bf x}\right)={\bf q}_{c}^{g}
\end{equation}

\end_inset

However, we need to express this in terms of the states of our estimator.
 Something like this
\begin_inset Formula 
\begin{align}
h\left({\bf x}\right) & ={\bf q}_{c}^{g}\\
 & ={\bf q}\left(R_{I}^{g}R_{b}^{I}R_{c}^{b}\right)\\
 & ={\bf q}_{c}^{b}\otimes{\bf q}_{b}^{I}\otimes{\bf q}_{I}^{g}\\
 & ={\bf q}_{c}^{b}\otimes\left({\bf q}_{I}^{b}\right)^{*}\otimes{\bf q}_{I}^{g}
\end{align}

\end_inset

Using the error state formulation from 
\begin_inset Quotes eld
\end_inset

Relative Multiplicative EKF
\begin_inset Quotes erd
\end_inset

 Koch, et.
 al.
 We can follow section 6.2.4.
\begin_inset Formula 
\begin{align}
{\bf h}({\bf x}) & ={\bf q}_{c}^{g}\\
 & ={\bf q}_{c}^{b}\otimes\left({\bf q}_{I}^{b}\right)^{*}\otimes{\bf q}_{I}^{g}\otimes{\bf \eta}^{\wedge}
\end{align}

\end_inset

We can expand this so that 
\begin_inset Formula 
\begin{align}
{\bf h}({\bf x}) & ={\bf q}_{c}^{b}\otimes\left(\hat{{\bf q}}_{I}^{b}\otimes\delta{\bf q}_{I}^{b}\right)^{-1}\otimes\hat{{\bf q}}_{I}^{g}\otimes\delta{\bf q}_{I}^{g}\otimes{\bf \eta}^{\wedge}\\
 & ={\bf q}_{c}^{b}\otimes\left(\delta{\bf q}_{I}^{b}\right)^{-1}\otimes\left(\hat{{\bf q}}_{I}^{b}\right)^{-1}\otimes\hat{{\bf q}}_{I}^{g}\otimes\delta{\bf q}_{I}^{g}\otimes{\bf \eta}^{\wedge}
\end{align}

\end_inset

The estimated measurement model is given by 
\begin_inset Formula 
\begin{equation}
{\bf h}(\hat{{\bf x}})={\bf q}_{c}^{b}\otimes\left({\bf \hat{q}}_{I}^{b}\right)^{-1}\otimes{\bf \hat{q}}_{I}^{g}
\end{equation}

\end_inset

For a given measurement, 
\begin_inset Formula ${\bf z}$
\end_inset

, the residual is modeled as 
\begin_inset Formula 
\begin{align}
{\bf r} & =\left({\bf h}\left(\hat{{\bf x}}\right)^{-1}\otimes{\bf z}\right)^{\vee}\\
 & =\left({\bf h}\left(\hat{{\bf x}}\right)^{-1}\otimes{\bf h}({\bf x})\right)^{\vee}\\
 & =\left(\left({\bf q}_{c}^{b}\otimes\left({\bf \hat{q}}_{I}^{b}\right)^{-1}\otimes{\bf \hat{q}}_{I}^{g}\right)^{-1}\otimes\left({\bf q}_{c}^{b}\otimes\left({\bf q}_{I}^{b}\right)^{*}\otimes{\bf q}_{I}^{g}\otimes{\bf \eta}^{\wedge}\right)\right)^{\vee}\\
 & =\left(\left({\bf \hat{q}}_{I}^{g}\right)^{-1}\otimes{\bf \hat{q}}_{I}^{b}\otimes\left({\bf q}_{c}^{b}\right)^{-1}\otimes{\bf q}_{c}^{b}\otimes\left(\delta{\bf q}_{I}^{b}\right)^{-1}\otimes\left(\hat{{\bf q}}_{I}^{b}\right)^{-1}\otimes\hat{{\bf q}}_{I}^{g}\otimes\delta{\bf q}_{I}^{g}\otimes{\bf \eta}^{\wedge}\right)^{\vee}\\
 & =\left(\left({\bf \hat{q}}_{I}^{g}\right)^{-1}\otimes\left({\bf \hat{q}}_{I}^{b}\otimes\left(\delta{\bf q}_{I}^{b}\right)^{-1}\otimes\left(\hat{{\bf q}}_{I}^{b}\right)^{-1}\right)\otimes\hat{{\bf q}}_{I}^{g}\otimes\delta{\bf q}_{I}^{g}\right)^{\vee}+{\bf \eta}\\
 & =\left(-R_{I}^{g}\left(R_{I}^{b}\right)^{\top}\delta{\bf \theta}_{I}^{b}+\delta{\bf \theta}_{I}^{g}\right)+{\bf \eta}
\end{align}

\end_inset

So the measurement jacobians are simply given by 
\begin_inset Formula 
\begin{align}
\frac{\partial{\bf r}}{\partial\delta\theta_{I}^{b}} & =-R_{I}^{g}\left(R_{I}^{b}\right)^{\top}\\
\frac{\partial{\bf r}}{\partial\delta\theta_{I}^{g}} & =I
\end{align}

\end_inset

Now let us assume that the goal frame and the aruco frame are not the same.
 I.e.
 the aruco frame is NWU (or some simialr reference) and the goal frame is
 NED like all of the other frames.
 We can assume to know the rotation 
\begin_inset Formula $q_{g}^{\text{aruco}}$
\end_inset

 and we still want to estimate the rotation 
\begin_inset Formula $q_{I}^{g}$
\end_inset

.
 This means that
\begin_inset Formula 
\begin{equation}
{\bf q}_{I}^{\text{aruco}}={\bf q}_{I}^{g}\otimes{\bf q}_{g}^{\text{aruco}}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{align}
{\bf h}({\bf x}) & ={\bf q}_{c}^{\text{aruco}}\\
 & ={\bf q}_{c}^{b}\otimes\left({\bf q}_{I}^{b}\right)^{*}\otimes{\bf q}_{I}^{g}\otimes{\bf q}_{g}^{\text{aruco}}\otimes{\bf \eta}^{\wedge}
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
{\bf h}({\bf x}) & ={\bf q}_{c}^{b}\otimes\left(\hat{{\bf q}}_{I}^{b}\otimes\delta{\bf q}_{I}^{b}\right)^{-1}\otimes\hat{{\bf q}}_{I}^{g}\otimes\delta{\bf q}_{I}^{g}\otimes{\bf q}_{g}^{\text{aruco}}\otimes{\bf \eta}^{\wedge}\\
 & ={\bf q}_{c}^{b}\otimes\left(\delta{\bf q}_{I}^{b}\right)^{-1}\otimes\left(\hat{{\bf q}}_{I}^{b}\right)^{-1}\otimes\hat{{\bf q}}_{I}^{g}\otimes\delta{\bf q}_{I}^{g}\otimes{\bf q}_{g}^{\text{aruco}}\otimes{\bf \eta}^{\wedge}
\end{align}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf h}(\hat{{\bf x}})={\bf q}_{c}^{b}\otimes\left({\bf \hat{q}}_{I}^{b}\right)^{-1}\otimes{\bf \hat{q}}_{I}^{g}\otimes{\bf q}_{g}^{\text{aruco}}
\end{equation}

\end_inset

And so the residual is given by
\begin_inset Formula 
\begin{align}
{\bf r} & =\left({\bf h}\left(\hat{{\bf x}}\right)^{-1}\otimes{\bf z}\right)^{\vee}\\
 & =\left({\bf h}\left(\hat{{\bf x}}\right)^{-1}\otimes{\bf h}({\bf x})\right)^{\vee}\\
 & =\left(\left({\bf q}_{c}^{b}\otimes\left({\bf \hat{q}}_{I}^{b}\right)^{-1}\otimes{\bf \hat{q}}_{I}^{g}\otimes{\bf q}_{g}^{\text{aruco}}\right)^{-1}\otimes\left({\bf q}_{c}^{b}\otimes\left({\bf q}_{I}^{b}\right)^{*}\otimes{\bf q}_{I}^{g}\otimes{\bf q}_{g}^{\text{aruco}}\otimes{\bf \eta}^{\wedge}\right)\right)^{\vee}\\
 & =\left(\left({\bf q}_{g}^{\text{aruco}}\right)^{-1}\otimes\left({\bf \hat{q}}_{I}^{g}\right)^{-1}\otimes{\bf \hat{q}}_{I}^{b}\otimes\left({\bf q}_{c}^{b}\right)^{-1}\otimes{\bf q}_{c}^{b}\otimes\left(\delta{\bf q}_{I}^{b}\right)^{-1}\otimes\left(\hat{{\bf q}}_{I}^{b}\right)^{-1}\otimes\hat{{\bf q}}_{I}^{g}\otimes\delta{\bf q}_{I}^{g}\otimes{\bf q}_{g}^{\text{aruco}}\otimes{\bf \eta}^{\wedge}\right)^{\vee}\\
 & =\left(\left({\bf q}_{g}^{\text{aruco}}\right)^{-1}\otimes\left({\bf \hat{q}}_{I}^{g}\right)^{-1}\otimes\left({\bf \hat{q}}_{I}^{b}\otimes\left(\delta{\bf q}_{I}^{b}\right)^{-1}\otimes\left(\hat{{\bf q}}_{I}^{b}\right)^{-1}\right)\otimes\hat{{\bf q}}_{I}^{g}\otimes\delta{\bf q}_{I}^{g}\otimes{\bf q}_{g}^{\text{aruco}}\right)^{\vee}+{\bf \eta}\\
 & =R_{g}^{\text{aruco}}\left(-R_{I}^{g}\left(R_{I}^{b}\right)^{\top}\delta{\bf \theta}_{I}^{b}+\delta{\bf \theta}_{I}^{g}\right)+{\bf \eta}
\end{align}

\end_inset

So the measurement jacobians are simply given by 
\begin_inset Formula 
\begin{align}
\frac{\partial{\bf r}}{\partial\delta\theta_{I}^{b}} & =-R_{g}^{\text{aruco}}R_{I}^{g}\left(R_{I}^{b}\right)^{\top}\\
\frac{\partial{\bf r}}{\partial\delta\theta_{I}^{g}} & =R_{g}^{\text{aruco}}
\end{align}

\end_inset


\end_layout

\begin_layout Subsection
ArUco T Vec
\end_layout

\begin_layout Standard
From the ArUco detection, it gives us an Rvec and Tvec where the t vec is
 the position vector from the camera frame to the ArUco frame expressed
 in the camera frame.
 We can express this measurement model as
\begin_inset Formula 
\begin{align}
h({\bf x}) & ={\bf p}_{\text{aruco}/\text{camera}}^{\text{camera}}.
\end{align}

\end_inset

Since we have defined the goal frame and the aruco frame to be co-located,
 we can expresss this in terms of our state vectors as
\begin_inset Formula 
\begin{align}
h({\bf x}) & ={\bf p}_{\text{aruco}/I}^{c}-{\bf p}_{c/I}^{c}\\
 & ={\bf p}_{g/I}^{c}-{\bf p}_{c/I}^{c}\\
 & =R_{b}^{c}R_{I}^{b}{\bf p}_{g/I}^{I}-R_{b}^{c}\left({\bf p}_{c/b}^{b}+R_{I}^{b}{\bf p}_{b/I}^{I}\right)
\end{align}

\end_inset

The jacobian of this is kinda complicated but here are the parts
\begin_inset Formula 
\begin{align}
\frac{\partial h}{\partial{\bf p}_{b/I}^{I}} & =-R_{b}^{c}R_{I}^{b}\\
\frac{\partial h}{\partial\tilde{q}_{I}^{b}} & =-R_{b}^{c}R_{I}^{b}\left({\bf p}_{g/I}^{I}\right)^{\vee}+R_{b}^{c}R_{I}^{b}\left({\bf p}_{b/I}^{I}\right)^{\vee}\\
\frac{\partial h}{\partial\tilde{q}_{I}^{b}} & =R_{b}^{c}R_{I}^{b}\left({\bf p}_{g/I}^{I}\right)^{\vee}-R_{b}^{c}R_{I}^{b}\left({\bf p}_{b/I}^{I}\right)^{\vee}\text{This is the one that works in the code, note exactly sure why (-1)}\\
\frac{\partial h}{\partial{\bf p}_{g/I}^{I}} & =R_{b}^{c}R_{I}^{b}
\end{align}

\end_inset


\end_layout

\begin_layout Part
Sensors on the Boat (and No visual features)
\end_layout

\begin_layout Standard
A different approach to the relative estimation problem is to allow sensors
 on the moving target to communicate with the UAV.
 We still assume that there is a fiducial landing marker as the landing
 target that we can detect from the UAV's camera.
 We can then estimate the UAV state and the landing vehicle's state separately.
 This approach is taken in several other papers, however, by estimating
 them together (tightly coupled) we can get better results.
\end_layout

\begin_layout Section
Estimated State
\end_layout

\begin_layout Standard
We will split the state into 2 components, the uav states, 
\begin_inset Formula ${\bf x}_{uav}$
\end_inset

, the vehicle states, 
\begin_inset Formula ${\bf x}_{vehicle}$
\end_inset

.
 The total state is then given by the tuple
\begin_inset Formula 
\begin{align}
{\bf x} & =\left\langle {\bf x}_{\text{uav}}^{\top},{\bf x}_{\text{vehicle}}^{\top}\right\rangle ^{\top}\\
{\bf u} & =\begin{bmatrix}\left(\bar{{\bf a}}_{b/I}^{b}-{\bf \eta}_{a}\right)^{\top} & \left(\bar{{\bf \omega}}_{b/I}^{b}-{\bf \eta}_{\omega}\right)^{\top}\end{bmatrix}^{\top}
\end{align}

\end_inset

Each component is given by the following:
\begin_inset Formula 
\begin{equation}
{\bf x}_{\text{uav}}=\left\langle \boldsymbol{p}_{b/I}^{I},\boldsymbol{v}_{b/I}^{b},\boldsymbol{q}_{I}^{b},\boldsymbol{\beta}_{a},\boldsymbol{\beta}_{\omega},b\right\rangle \in\mathbb{R}^{3}\times\mathbb{R}^{3}\times S^{3}\times\mathbb{R}^{3}\times\mathbb{R}^{3}\times\mathbb{R}^{1}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf x}_{\text{vehicle}}=\left\langle \boldsymbol{p}_{g/I}^{I},\boldsymbol{v}_{g/I}^{g},\boldsymbol{q}_{I}^{g},{\bf \omega}_{g/I}^{g}\right\rangle \in\mathbb{R}^{3}\times S^{3}\times\mathbb{R}^{3}.
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Sensor Suite
\end_layout

\begin_layout Subsection
UAV
\end_layout

\begin_layout Standard
We will assume a minimum sensor suite onboard the UAV.
 This
\end_layout

\begin_layout Itemize
GPS
\end_layout

\begin_deeper
\begin_layout Itemize
Latitude Position
\end_layout

\begin_layout Itemize
Logitude Position
\end_layout

\begin_layout Itemize
Altitude?
\end_layout

\begin_layout Itemize
North Velocity
\end_layout

\begin_layout Itemize
East Velocity
\end_layout

\end_deeper
\begin_layout Itemize
IMU
\end_layout

\begin_deeper
\begin_layout Itemize
Body-fixed angular acceleration (omega)
\end_layout

\begin_layout Itemize
Body-fixed linear acceleration
\end_layout

\begin_layout Itemize
Estimated roll and pitch angles?
\end_layout

\end_deeper
\begin_layout Itemize
Camera
\end_layout

\begin_deeper
\begin_layout Itemize
ArUco detections (relative translation and rotation from camera to ArUco
 frame)
\end_layout

\end_deeper
\begin_layout Itemize
Barometer
\end_layout

\begin_deeper
\begin_layout Itemize
Altitude relative to where we zero it
\end_layout

\end_deeper
\begin_layout Subsection
Landing Vehicle
\end_layout

\begin_layout Itemize
GPS
\end_layout

\begin_deeper
\begin_layout Itemize
Latitude Position
\end_layout

\begin_layout Itemize
Longitude Position
\end_layout

\begin_layout Itemize
Altitude?
\end_layout

\begin_layout Itemize
North Velocity
\end_layout

\begin_layout Itemize
East Velocity
\end_layout

\end_deeper
\begin_layout Itemize
IMU
\end_layout

\begin_deeper
\begin_layout Itemize
Body-fixed angular acceleration (omega)
\end_layout

\begin_layout Itemize
Body-fixed linear acceleration
\end_layout

\begin_layout Itemize
Estimated roll and pitch angles?
\end_layout

\end_deeper
\begin_layout Section
Dealing with Delay
\end_layout

\begin_layout Standard
With sensors on the landing vehicle, we must account for communication delay.
 While the UAV is in the landing phase, close to the landing platform, we
 assume that the vehicle can communicate its sensor readings to the UAV
 intermitently.
 This communication will result in significant delays and therefore the
 estimator cannot simply update its estimate assuming that the measurement
 accurately represents the current state.
 To account for these delays, we first assume that we have a synchronized
 clock between the UAV and the Landing Vehicle.
 This is pretty easy to take care of since we have a GPS receiver on both
 ends.
 We can assume that all sensor readings are stamped with UTC time from GPS.
\end_layout

\begin_layout Standard
Assuming that we know the accurate time stamps for when the measurements
 were taken, we can properly account for these measurements with a buffer.
 If we keep a buffer of the internals of the estimator, then upon receiving
 a new measurement, we can use the estimator's state at the appropriate
 time and repropagate it forward using the buffered sensor data.
 Because this requires a lot of computation, we must make sure that our
 buffer is only long enough to maintain real-time performance.
 We cannot expect to rewind and repropagate the entire estimator large time
 steps (i.e.
 10 seconds) every time we get a measurement.
 If the measurements from the landing vehicle are only delayed about one
 second then we can probably still operate at real time.
\end_layout

\begin_layout Subsection
Implementation
\end_layout

\begin_layout Standard
To implement the filter rewind/fast forward used to account for delayed
 measurements, we can use a circular buffer.
\end_layout

\begin_layout Section
Error State Dynamics
\end_layout

\begin_layout Standard
Since the estimated state is not a vector, we must use an Error-State Kalman
 Filter (ESKF).
 We therefore need the error state dynamics of the state.
 We define the error state to be
\begin_inset Formula 
\begin{equation}
\tilde{{\bf x}}={\bf x}\boxminus\hat{{\bf x}}
\end{equation}

\end_inset

where 
\begin_inset Formula ${\bf x}$
\end_inset

 represents the true state, 
\begin_inset Formula $\hat{{\bf x}}$
\end_inset

 represents the estimated state and 
\begin_inset Formula $\tilde{{\bf x}}$
\end_inset

 represents the error state.
 Since 
\begin_inset Formula ${\bf x}$
\end_inset

 is not a vector quantity, we use the 
\begin_inset Formula $\boxminus$
\end_inset

 operator to denote an appropriate subtraction operation for each quatnity
 in the state tuple.
 For vector quantities such as position, this is easily define as the regular
 vector subtraction operation such that
\begin_inset Formula 
\begin{equation}
\tilde{\boldsymbol{p}}_{b/I}^{I}=\boldsymbol{p}_{b/I}^{I}-\hat{\boldsymbol{p}}_{b/I}^{I}.
\end{equation}

\end_inset

The only non vector quantities in our state tuple are the attitude representatio
ns which are quaternions 
\begin_inset Formula $\in S^{3}.$
\end_inset

 To help with these quantities, we first define the vector
\begin_inset Formula 
\begin{equation}
{\bf r}_{I}^{b}\left(t\right)={\bf r}_{I}^{b}\left(t_{0}\right)+\int_{t_{0}}^{t}{\bf \omega}_{b/I}^{b}\left(\tau\right)d\tau,
\end{equation}

\end_inset

such that 
\begin_inset Formula ${\bf r}_{I}^{b}\left(t_{0}\right)=0$
\end_inset

 and 
\begin_inset Formula $\dot{{\bf r}}_{I}^{b}={\bf \omega}_{b/I}^{b}$
\end_inset

.
 With this definition, we can express
\begin_inset Formula 
\begin{align}
{\bf q}_{I}^{b} & ={\bf \hat{q}}_{I}^{b}\otimes\exp_{{\bf q}}\left(\tilde{{\bf r}}\right)\\
\tilde{{\bf r}} & =\log_{{\bf q}}\left(\left({\bf \hat{q}}_{I}^{b}\right)^{-1}\otimes{\bf q}_{I}^{b}\right)
\end{align}

\end_inset

or as in Hertzberg
\begin_inset Formula 
\begin{align}
{\bf q}_{I}^{b} & ={\bf \hat{q}}_{I}^{b}\boxplus\tilde{{\bf r}}\\
\tilde{{\bf r}} & ={\bf q}_{I}^{b}\boxminus{\bf \hat{q}}_{I}^{b}.
\end{align}

\end_inset

Even though 
\begin_inset Formula ${\bf r}_{I}^{b}$
\end_inset

 is a vector, we cannot simply compute the error-state as 
\begin_inset Formula $\tilde{{\bf r}}_{I}^{b}={\bf r}_{I}^{b}-\hat{{\bf r}}_{I}^{b}$
\end_inset

 because 
\begin_inset Formula ${\bf r}_{I}^{b}$
\end_inset

 is a minimal representation of 
\begin_inset Formula ${\bf q}_{I}^{b}$
\end_inset

, which is a double cover of the Lie group 
\begin_inset Formula $SO\left(3\right)$
\end_inset

.
 Vector subtraction of members in this group is not valid.
 However, the derivative of 
\begin_inset Formula ${\bf r}_{I}^{b}$
\end_inset

 exists in the tangent space of 
\begin_inset Formula $SO\left(3\right)$
\end_inset

, so we can perform
\begin_inset Formula 
\begin{equation}
\dot{\tilde{{\bf r}}}_{I}^{b}=\dot{{\bf r}}_{I}^{b}-R_{I}^{b}\left(\hat{R}_{I}^{b}\right)^{\top}\dot{\hat{{\bf r}}}_{I}^{b}
\end{equation}

\end_inset

where 
\begin_inset Formula $R_{I}^{b}\left(\hat{R}_{I}^{b}\right)^{\top}$
\end_inset

 moves the estimated vector derivative 
\begin_inset Formula $\dot{\hat{{\bf r}}}_{I}^{b}$
\end_inset

 from its own tangent space to the tangent space of 
\begin_inset Formula $\dot{{\bf r}}_{I}^{b}$
\end_inset

.
 With both vectors in the same tangent space, the vector subtraction is
 valid.
\end_layout

\begin_layout Subsection
Identities
\end_layout

\begin_layout Standard
To help derive the error-state dynamics, we first need to establish a few
 identities and approximations.
 We often convert quaternions to rotation matrices for notational convenience.
 This is done by
\begin_inset Formula 
\begin{equation}
R\left({\bf q}\right)=\left(2q_{0}^{2}-1\right)I-2q_{0}
\end{equation}

\end_inset

Since rotation matrices concatenate in an order opposite to quaternions,
 we have
\begin_inset Formula 
\begin{equation}
R_{I}^{b}=R\left(\exp_{{\bf q}}\left(\tilde{{\bf r}}\right)\right)\hat{R}_{I}^{b}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
UAV Dynamics
\end_layout

\begin_layout Subsubsection
True State Dynamics
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{p}}_{b/I}^{I}=\left(R_{I}^{b}\right)^{T}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{v}}_{b/I}^{b}=\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\boldsymbol{a}_{b/I}^{b}+R_{I}^{b}\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\boldsymbol{v}_{b/I}^{b}-\left(\boldsymbol{\omega}_{b/I}^{b}\right)^{\mathcircumflex}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{q}}_{I}^{b}=\frac{1}{2}{\bf q}_{t}\otimes{\bf \omega}_{t}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{a}={\bf a}_{w}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{\omega}={\bf \omega}_{w}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{b}=\boldsymbol{0}
\end{equation}

\end_inset

Here the true acceleration and angular rate are obtained from an IMU in
 the form of noisy sensor readings 
\begin_inset Formula ${\bf a}_{m}$
\end_inset

and 
\begin_inset Formula ${\bf \omega}_{m}$
\end_inset

 in body frame, namely
\begin_inset Formula 
\begin{equation}
{\bf a}_{m}={\bf a}_{t}+{\bf \beta}_{a}+{\bf a}_{noise}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf \omega}_{m}={\bf \omega}_{t}+{\bf \beta}_{\omega}+{\bf \omega}_{noise}
\end{equation}

\end_inset

With this, the true values can be isolated such that
\begin_inset Formula 
\begin{equation}
{\bf a}_{t}={\bf a}_{m}-{\bf \beta}_{a}-{\bf a}_{noise}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
{\bf \omega}_{t}={\bf \omega}_{m}-{\bf \beta}_{\omega}-{\bf \omega}_{noise}
\end{equation}

\end_inset

Substituing these into the true kinematic equations we get
\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{p}}_{b/I}^{I}=\left(R_{I}^{b}\right)^{T}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{v}}_{b/I}^{b}=\boldsymbol{e}_{3}\boldsymbol{e}_{3}^{T}\left({\bf a}_{m}-{\bf \beta}_{a}-{\bf a}_{noise}\right)+R_{I}^{b}\boldsymbol{g}^{I}-b\begin{bmatrix}\boldsymbol{e}_{1} & \boldsymbol{e}_{2} & \boldsymbol{0}\end{bmatrix}\boldsymbol{v}_{b/I}^{b}-\left({\bf \omega}_{m}-{\bf \beta}_{\omega}-{\bf \omega}_{noise}\right)^{\mathcircumflex}\boldsymbol{v}_{b/I}^{b}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\boldsymbol{\dot{q}}_{I}^{b}=\frac{1}{2}{\bf q}_{t}\otimes\left({\bf \omega}_{m}-{\bf \beta}_{\omega}-{\bf \omega}_{noise}\right)
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{a}={\bf a}_{w}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{\beta}_{\omega}={\bf \omega}_{w}
\end{equation}

\end_inset


\begin_inset Formula 
\begin{equation}
\dot{b}=\boldsymbol{0}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Vehicle Dynamics
\end_layout

\begin_layout Standard
We will first assume a unicycle model for the landing vehicle.
\end_layout

\begin_layout Subsubsection
True State Dynamics
\end_layout

\begin_layout Paragraph*
\begin_inset Formula 
\begin{align}
\dot{\boldsymbol{p}}_{g/I}^{I} & =\left(R_{I}^{g}\right)^{\top}\boldsymbol{v}_{g/I}^{g}\\
\boldsymbol{\dot{v}}_{g/I}^{g} & =\boldsymbol{0}+\boldsymbol{\eta}_{vg}\\
\boldsymbol{\dot{q}}_{I}^{g} & =\frac{1}{2}{\bf q}_{I}^{g}\otimes{\bf \omega}_{g/I}^{g}\\
{\bf \dot{\omega}}_{g/I}^{g} & =\boldsymbol{0}+\boldsymbol{\eta}_{\omega g}
\end{align}

\end_inset


\end_layout

\begin_layout Subsubsection
Nominal State Dynamics
\end_layout

\begin_layout Paragraph*
\begin_inset Formula 
\begin{align}
\dot{\boldsymbol{p}}_{g/I}^{I} & =\left(R_{I}^{g}\right)^{\top}\boldsymbol{v}_{g/I}^{g}\\
\boldsymbol{\dot{v}}_{g/I}^{g} & =\boldsymbol{0}\\
\boldsymbol{\dot{q}}_{I}^{g} & =\frac{1}{2}{\bf q}_{I}^{g}\otimes{\bf \omega}_{g/I}^{g}\\
{\bf \dot{\omega}}_{g/I}^{g} & =\boldsymbol{0}
\end{align}

\end_inset


\end_layout

\begin_layout Subsubsection
Error State Dynamics
\end_layout

\begin_layout Standard
For many of the states, such as position, this is pretty straight forward.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\boldsymbol{p}_{g/I}^{I} & =\hat{\boldsymbol{p}}_{g/I}^{I}+\tilde{\boldsymbol{p}}_{g/I}^{I}\\
\dot{\boldsymbol{p}}_{g/I}^{I} & =\dot{\hat{\boldsymbol{p}}}_{g/I}^{I}+\dot{\tilde{\boldsymbol{p}}}_{g/I}^{I}\\
\dot{\tilde{\boldsymbol{p}}}_{g/I}^{I} & =\dot{\boldsymbol{p}}_{g/I}^{I}-\dot{\hat{\boldsymbol{p}}}_{g/I}^{I}
\end{align}

\end_inset

We can then substitute in dynamics
\begin_inset Formula 
\begin{align}
\dot{\tilde{\boldsymbol{p}}}_{g/I}^{I} & =\dot{\boldsymbol{p}}_{g/I}^{I}-\dot{\hat{\boldsymbol{p}}}_{g/I}^{I}\\
 & =\left(R_{I}^{g}\right)^{\top}\boldsymbol{v}_{g/I}^{g}-\left(\hat{R}_{I}^{g}\right)^{\top}\hat{\boldsymbol{v}}_{g/I}^{g}\\
 & =\left(R_{I}^{g}\left(I+\left[\delta{\bf \theta}\right]_{\times}\right)\right)^{\top}\left(\hat{\boldsymbol{v}}_{g/I}^{g}+\tilde{\boldsymbol{v}}_{g/I}^{g}\right)-\left(\hat{R}_{I}^{g}\right)^{\top}\hat{\boldsymbol{v}}_{g/I}^{g}\\
 & =\left(\left(I+\left[\delta{\bf \theta}\right]_{\times}\right)\right)^{\top}\left(\hat{R}_{I}^{g}\right)^{\top}\left(\hat{\boldsymbol{v}}_{g/I}^{g}+\tilde{\boldsymbol{v}}_{g/I}^{g}\right)-\left(\hat{R}_{I}^{g}\right)^{\top}\hat{\boldsymbol{v}}_{g/I}^{g}\\
 & =\left(I-\left[\delta{\bf \theta}\right]_{\times}\right)\left(\hat{R}_{I}^{g}\right)^{\top}\left(\hat{\boldsymbol{v}}_{g/I}^{g}+\tilde{\boldsymbol{v}}_{g/I}^{g}\right)-\left(\hat{R}_{I}^{g}\right)^{\top}\hat{\boldsymbol{v}}_{g/I}^{g}\\
 & =\left(\hat{R}_{I}^{g}\right)^{\top}\tilde{\boldsymbol{v}}_{g/I}^{g}-\left[\delta{\bf \theta}\right]_{\times}\left(\hat{R}_{I}^{g}\right)^{\top}\hat{\boldsymbol{v}}_{g/I}^{g}\\
 & =\left(\hat{R}_{I}^{g}\right)^{\top}\tilde{\boldsymbol{v}}_{g/I}^{g}+\left[\left(\hat{R}_{I}^{g}\right)^{\top}\hat{\boldsymbol{v}}_{g/I}^{g}\right]_{\times}\delta{\bf \theta}
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
\dot{\tilde{\boldsymbol{v}}}_{g/I}^{g} & =\dot{\boldsymbol{v}}_{g/I}^{g}-\dot{\hat{\boldsymbol{v}}}_{g/I}^{g}\\
 & =\left(\boldsymbol{0}+\boldsymbol{\eta}_{vg}\right)-\boldsymbol{0}\\
 & =\boldsymbol{\eta}_{vg}
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
\dot{\tilde{\boldsymbol{q}}}_{I}^{g} & =\dot{\boldsymbol{q}}_{I}^{g}\boxminus\dot{\hat{\boldsymbol{q}}}_{I}^{g}\\
 & TODO
\end{align}

\end_inset


\begin_inset Formula 
\begin{align}
\dot{\tilde{\boldsymbol{\omega}}}_{g/I}^{g} & =\dot{\boldsymbol{\omega}}_{g/I}^{g}-\dot{\hat{\boldsymbol{\omega}}}_{g/I}^{g}\\
 & =\left(\boldsymbol{0}+\boldsymbol{\eta}_{\omega g}\right)-\boldsymbol{0}\\
 & =\boldsymbol{\eta}_{\omega g}
\end{align}

\end_inset


\end_layout

\begin_layout Part
Control
\end_layout

\begin_layout Standard
For the purpose of this project, we will focus on control during the landing
 phase of the problem (i.e.
 after we have seen the landing marker and initialized our relative estimator).
 With this in mind, we will choose to control the multirotor with desired
 angular rates, 
\begin_inset Formula ${\bf \omega}$
\end_inset

 and throttle, 
\begin_inset Formula $F$
\end_inset

, such that our control signal is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
{\bf u}=\begin{bmatrix}F & {\bf \omega}_{b/I}^{b}\end{bmatrix}\in\mathbb{R}^{4\times1}.
\end{equation}

\end_inset

 The state that we wish to control is given by
\begin_inset Formula 
\begin{equation}
{\bf x}=\begin{bmatrix}{\bf p}_{c/g}^{c} & {\bf v}_{/I}^{b} & {\bf q}_{I}^{c}\end{bmatrix}.
\end{equation}

\end_inset

In addition to the state, we would also need to know the value of 
\begin_inset Formula ${\bf v}_{g/I}^{I}=\left(R_{I}^{g}\right)^{\top}$
\end_inset

 which we assume to be instantaneously constant.
 The dynamics of our state are given by
\begin_inset Formula 
\begin{align}
{\bf \dot{p}}_{b/g}^{b} & ={\bf v}_{b/g}^{b}\\
 & ={\bf v}_{b/I}^{b}-{\bf v}_{g/I}^{b}\\
 & ={\bf v}_{b/I}^{b}-R_{I}^{b}\left(R_{I}^{g}\right)^{\top}{\bf v}_{g/I}^{g}\\
\dot{{\bf v}}_{b/I}^{b} & =gR_{i}^{b}{\bf e}_{3}-F\frac{g}{F_{\text{hover}}}{\bf e}_{3}-M{\bf v}_{b/i}^{b}-{\bf \omega}_{b/i}^{b}\times{\bf v}_{b/i}^{b}\\
\dot{{\bf q}}_{I}^{b} & ={\bf \omega}_{b/I}^{b}
\end{align}

\end_inset


\end_layout

\begin_layout Section
MPC Control
\end_layout

\begin_layout Standard
What if we computed the control in the camera frame? So that our control
 is given by
\begin_inset Formula 
\begin{equation}
{\bf u}=\begin{bmatrix}F & {\bf \omega}_{b/I}^{b}\end{bmatrix}\in\mathbb{R}^{4\times1}.
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Dynamics
\end_layout

\begin_layout Standard
Let's formulate our state in the camera frame then as well so that
\begin_inset Formula 
\begin{equation}
{\bf x}=\begin{bmatrix}{\bf p}_{c/g}^{c} & {\bf v}_{c/I}^{c} & {\bf q}_{I}^{c} & {\bf v}_{g/I}^{g} & {\bf q}_{I}^{g} & {\bf q}\end{bmatrix}.
\end{equation}

\end_inset

The nonlinear dynamics are then given by
\begin_inset Formula 
\begin{align}
{\bf \dot{p}}_{c/g}^{c} & ={\bf v}_{c/g}^{c}\\
 & ={\bf v}_{c/I}^{c}-{\bf v}_{g/I}^{c}\\
 & ={\bf v}_{c/I}^{c}-R_{b}^{c}R_{I}^{b}\left(R_{I}^{g}\right)^{\top}{\bf v}_{g/I}^{g}\\
\dot{{\bf v}}_{b/I}^{b} & =gR_{i}^{b}{\bf e}_{3}-F\frac{g}{F_{\text{hover}}}{\bf e}_{3}-M{\bf v}_{b/i}^{b}-{\bf \omega}_{b/i}^{b}\times{\bf v}_{b/i}^{b}\\
\dot{{\bf q}}_{I}^{b} & ={\bf \omega}_{b/I}^{b}
\end{align}

\end_inset


\end_layout

\begin_layout Subsection
Constraints
\end_layout

\begin_layout Standard
The reason for doing MPC control is to have contraints to keep the landing
 marker in the camera FOV at all times.
 This requires that we keep the corners of the ArUco marker in the image
 plane at all times (and additionally make sure it is big enough).
 If we assume that the landing target is 1m x 1m, we know that the corners
 of the ArUco marker are given by 
\begin_inset Formula 
\begin{equation}
{\bf p}_{g/\text{corners}}^{g}=\begin{bmatrix}0.5\\
0.5\\
0
\end{bmatrix},\begin{bmatrix}0.5\\
-0.5\\
0
\end{bmatrix},\begin{bmatrix}-0.5\\
0.5\\
0
\end{bmatrix},\begin{bmatrix}-0.5\\
-0.5\\
0
\end{bmatrix}.
\end{equation}

\end_inset

To project these into the camera image we know that if
\begin_inset Formula 
\begin{equation}
{\bf p}_{c/\text{object}}^{c}=\begin{bmatrix}X\\
Y\\
Z
\end{bmatrix}
\end{equation}

\end_inset

then the pixels in the image plane are given by
\series bold

\begin_inset Formula 
\begin{equation}
\begin{bmatrix}p_{x}\\
p_{y}
\end{bmatrix}=\frac{f}{Z}\begin{bmatrix}X\\
Y
\end{bmatrix}+\begin{bmatrix}c_{x}\\
c_{y}
\end{bmatrix}.
\end{equation}

\end_inset


\series default
This means that we just need to know 
\begin_inset Formula ${\bf p}_{c/\text{\text{corners}}}^{c}$
\end_inset

 which is given by
\begin_inset Formula 
\begin{align}
{\bf p}_{c/\text{\text{corners}}}^{c} & ={\bf p}_{c/\text{g}}^{c}-{\bf p}_{g/\text{\text{corners}}}^{c}\\
 & ={\bf p}_{c/\text{g}}^{c}-R_{b}^{c}R_{I}^{b}R_{g}^{I}{\bf p}_{g/\text{\text{corners}}}^{g}.
\end{align}

\end_inset

Which means that
\begin_inset Formula 
\begin{align}
\begin{bmatrix}p_{x}\\
p_{y}
\end{bmatrix} & =\frac{f}{{\bf p}_{c/\text{\text{corners}}}^{c}{\bf e}_{3}}\begin{bmatrix}{\bf p}_{c/\text{\text{corners}}}^{c}{\bf e}_{1}\\
{\bf p}_{c/\text{\text{corners}}}^{c}{\bf e}_{2}
\end{bmatrix}+\begin{bmatrix}c_{x}\\
c_{y}
\end{bmatrix}\\
\begin{bmatrix}p_{x}\\
p_{y}
\end{bmatrix} & =\frac{f}{\left({\bf p}_{c/\text{g}}^{c}-R_{b}^{c}R_{I}^{b}R_{g}^{I}{\bf p}_{g/\text{\text{corners}}}^{g}\right){\bf e}_{3}}\begin{bmatrix}\left({\bf p}_{c/\text{g}}^{c}-R_{b}^{c}R_{I}^{b}R_{g}^{I}{\bf p}_{g/\text{\text{corners}}}^{g}\right){\bf e}_{1}\\
\left({\bf p}_{c/\text{g}}^{c}-R_{b}^{c}R_{I}^{b}R_{g}^{I}{\bf p}_{g/\text{\text{corners}}}^{g}\right){\bf e}_{2}
\end{bmatrix}+\begin{bmatrix}c_{x}\\
c_{y}
\end{bmatrix}.
\end{align}

\end_inset

And we want to ensure that
\begin_inset Formula 
\begin{align}
p_{x\min} & <p_{x}<p_{x\max}\\
p_{y\min} & <p_{y}<p_{y\max}.
\end{align}

\end_inset

 For our situation this means that
\begin_inset Formula 
\begin{align}
p_{x\min} & <\frac{f}{\left({\bf p}_{c/\text{g}}^{c}-R_{b}^{c}R_{I}^{b}R_{g}^{I}{\bf p}_{g/\text{\text{corners}}}^{g}\right){\bf e}_{3}}\left({\bf p}_{c/\text{g}}^{c}-R_{b}^{c}R_{I}^{b}R_{g}^{I}{\bf p}_{g/\text{\text{corners}}}^{g}\right){\bf e}_{1}<p_{x\max}\\
\left({\bf p}_{c/\text{g}}^{c}-R_{b}^{c}R_{I}^{b}R_{g}^{I}{\bf p}_{g/\text{\text{corners}}}^{g}\right){\bf e}_{3}p_{x\min} & <f\left({\bf p}_{c/\text{g}}^{c}-R_{b}^{c}R_{I}^{b}R_{g}^{I}{\bf p}_{g/\text{\text{corners}}}^{g}\right){\bf e}_{1}<\left({\bf p}_{c/\text{g}}^{c}-R_{b}^{c}R_{I}^{b}R_{g}^{I}{\bf p}_{g/\text{\text{corners}}}^{g}\right){\bf e}_{3}p_{x\max}\\
{\bf p}_{c/\text{g}}^{c} & =state\\
R_{b}^{c}R_{I}^{b} & =state\\
R_{g}^{I} & =constant?orState?\\
{\bf p}_{g/\text{\text{corners}}}^{g} & =constant\\
\end{align}

\end_inset


\end_layout

\begin_layout Part
Trajectory Generation
\end_layout

\begin_layout Standard
We need to generate a smooth trajectory that takes the drone from its current
 position with respect to the goal, 
\begin_inset Formula ${\bf p}_{b/g}^{b}$
\end_inset

 to the landing point where 
\begin_inset Formula ${\bf p}_{b/g}^{b}={\bf 0}$
\end_inset


\end_layout

\end_body
\end_document
